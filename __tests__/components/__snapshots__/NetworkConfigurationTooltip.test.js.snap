// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sidebar renders without crashing 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <IntlWrapper
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <IntlProvider
      defaultFormats={Object {}}
      defaultLocale="en"
      formats={Object {}}
      locale="en"
      messages={
        Object {
          "Asset": "Assetasdasd",
          "activityAddAddress": "Add",
          "activityExport": "Export",
          "activityPageLabel": "All Activity",
          "activityViewTx": "View",
          "addAContact": "Add A Contact",
          "addContactDetails": "Add Contact Details",
          "addToContacts": "Add to contacts",
          "addToken": "Add Token",
          "addressLabel": "PUBLIC ADDRESS",
          "assetRecipients": "Asset {transferCount, plural, one {Recipient} other {Recipients}}",
          "assets": "Assets",
          "auth.cancel": "Cancel",
          "auth.import.recoveryInstructions": "Upload a JSON wallet recovery file here to add your accounts to Neon. This option is also available on the Settings page.",
          "auth.ledger.connectLedger": "Connect and unlock your <strong>Ledger device</strong>",
          "auth.ledger.fetchAddress": "Fetch additional addresses",
          "auth.ledger.navigateToNeoApp": "Navigate to the <strong>NEO app</strong> on your device",
          "auth.ledger.retry": "Retry?",
          "authCreateWallet": "Create Wallet",
          "authEncrypted": "ENCRYPTED",
          "authImportWallet": "Import Wallet",
          "authLedger": "LEDGER",
          "authLedgerAddressLabel": "PUBLIC ADDRESS",
          "authLedgerFirstStep": "Connect and unlock your Ledger device",
          "authLedgerSecondStep": "Navigate to the NEO app on your device",
          "authLogin": "Login",
          "authLoginButton": "Login",
          "authPrivate": "PRIVATE",
          "authPrivateKeyPlaceholder": "Enter your private key here",
          "authSaved": "SAVED",
          "authScanQRButton": "Scan QR",
          "authWatch": "WATCH",
          "authWatchPlaceholder": "Enter a NEO address here",
          "automaticNodeSelectionTooltip": "Allow NEON to choose a node automatically",
          "captureQR": "Capture",
          "captureQRCaps": "CAPTURE",
          "chooseAccount": "Choose an Existing Account",
          "claimFeeDisclaimerN3": "Claiming GAS requires at least 0.01120527 GAS for transaction fees",
          "claimFeeGreater": "Claimable GAS is less than transaction fees",
          "claimTimeDisclaimer": "You can claim GAS once every 5 minutes",
          "claimUnavailableInWatch": "GAS claims are unavailable in Watch mode",
          "completeExclaim": "Complete!",
          "confirmAndSend": "Confirm & Send",
          "confirmRemoveContact": "Please confirm removing contact",
          "confirmation": "Confirmation",
          "confirmationRecipient": "{transferCount, number} {transferCount, plural, one {Recipient} other {Recipients}}",
          "contactName": "Name",
          "contactWalletAddress": "Wallet Address",
          "contactsPageLabel": "Manage Contacts",
          "copyAddressTooltip": "Copy Wallet Address",
          "copyCodeImage": "Copy Code Image",
          "createANewWallet": "Create New Wallet",
          "dashboardAddressLabel": "Address:",
          "dashboardAssetsPanelLabel": "System Assets",
          "dashboardAssetsTotal": "TOTAL",
          "dashboardBalancePanelLabel": "Token Balances",
          "dashboardGasClaimButton": "Claim {amount} GAS",
          "dashboardManageWallets": "Manage Wallets",
          "dashboardMarketData1Day": "1 DAY",
          "dashboardMarketData1Month": "1 MONTH",
          "dashboardMarketData1Week": "1 WEEK",
          "dashboardMarketDataLabel": "Market Data",
          "dashboardPriceNotAvailable": "N/A",
          "dashboardRefresh": "Refresh",
          "dashboardTokenBalancesHoldings": "HOLDINGS",
          "dashboardTokenBalancesPrice": "PRICE",
          "dashboardTokenBalancesToken": "Token",
          "dashboardValueLabel": "Total Wallet Value",
          "deleteLabel": "Delete",
          "depositAssets": "Deposit assets <b> compatible  with the NEO blockchain </b> using your address:",
          "editAContact": "Edit A Contact",
          "editContactDisclaimer": "Please review and ensure that you have entered the address correctly to avoid loss of funds",
          "editRecipients": "Edit Recipients",
          "encryptButton": "Generate Encrypted Key",
          "encryptInstructions": "Choose a passphrase to encrypt an existing key",
          "encryptPanelHeader": "Encrypt a key",
          "encryptStep1Label": "1) ENTER THE PRIVATE KEY YOU WANT TO ENCRYPT",
          "encryptStep1Placeholder": "Enter key",
          "encryptStep2Label": "2) CREATE A PASSPHRASE",
          "encryptStep2Placeholder": "Enter Passphrase",
          "encryptStep3Label": "3) CONFIM YOUR PASSPHRASE",
          "encryptStep3Placeholder": "Confirm Passphrase",
          "encryptedKeyLabel": "ENCRYPTED KEY",
          "enterAContactName": "Enter Contact Name...",
          "enterAWalletAddress": "Enter Wallet Address...",
          "errors.contact.contactExists": "You already have a contact with that address.",
          "errors.contact.invalidAddress": "Address is not valid.",
          "errors.contact.nameDupe": "You already have an account saved with that name.",
          "errors.contact.nameLength": "Name is too long.",
          "errors.contact.nameNull": "Name can't be null.",
          "errors.encrypt.valid": "The private key is not valid.",
          "errors.network.general": "Oops! Something went wrong...",
          "errors.password.length": "Passphrase must contain at least {PASS_MIN_LENGTH, number} characters.",
          "errors.password.match": "Passphrases must match.",
          "errors.request.fractional": "You canot request fractional {asset}.",
          "errors.request.max": "You cannot request more than 100,000,000 {asset}.",
          "errors.request.min": "You cannot request 0 {asset}.",
          "errors.request.validDecimals": "You can only request {asset} up to {validDecimals, number} decimals.",
          "errors.send.balance": "You do not have enough balance to send {total} {asset}.",
          "errors.send.blackListed": "Address is blacklisted. This is a known phishing address.",
          "errors.send.decimal": "You can only send {asset} up to {decimalCount, number} decimals.",
          "errors.send.fraction": "You cannot send fractional amounts of NEO.",
          "errors.send.invalidAddress": "You need to specify a valid NEO address.",
          "errors.send.invalidN3Address": "You need to specify a valid NEO N3 address.",
          "errors.send.negative": "You cannot send negative amounts of {asset}.",
          "errors.send.network": "A network error has occurred",
          "errors.send.number": "Amount must be a number.",
          "errors.send.zero": "Can not send 0 {asset}.",
          "fast": "Fast",
          "faster": "Faster",
          "fastest": "Fastest",
          "fee": "Fee:",
          "generateQrCodes": "Generate QR Codes",
          "importFile": "Import File",
          "inputEncryptedPlaceholder": "Encrypted Key",
          "inputPasswordPlaceholder": "Password",
          "inputSelectPlaceholder": "Select",
          "isLoadingMessage": "Loading...",
          "manageWalletsCreate": "Create",
          "manageWalletsEdit": "Edit",
          "manageWalletsEditWallet": "Edit Wallet",
          "manageWalletsEditWalletAddressLabel": "WALLET ADDRESS",
          "manageWalletsEditWalletInstructions": "Modify Details",
          "manageWalletsEditWalletNameLabel": "WALLET NAME",
          "manageWalletsEditWalletNamePlaceholder": "Wallet Name",
          "manageWalletsEditWalletSave": "Save Changes",
          "manageWalletsImport": "Import",
          "manageWalletsLabel": "Manage Wallets",
          "modalActionCancel": "Cancel",
          "modalActionConfirm": "Confirm",
          "modifyDetails": "Modify Details",
          "networkConfigTooltipAddress": "ADDRESS:",
          "networkConfigTooltipPublicKey": "PUBLIC KEY:",
          "networkConfigTooltipUpdateSettings": "Update Settings",
          "networkConfigTooltipVotedNode": "VOTE CAST FOR:",
          "networkSettingsAutomatic": "AUTOMATIC",
          "networkSettingsCurrentLabel": "CURRENT NETWORK",
          "networkSettingsExplorerLabel": "BLOCK EXPLORER",
          "networkSettingsInstructions": "Manage all network settings related to how Neon interacts with the blockchain",
          "networkSettingsLabel": "Network Settings",
          "networkSettingsNodeSelectLabel": "NODE SELECTION",
          "newContact": "New Contact",
          "newsPageLabel": "News",
          "nextStep": "Next Step",
          "noAvailableAssetsToSend": "No available assets to send",
          "noClaimableGas": "Address has no claimable GAS",
          "noOptionsMessage": "No options",
          "nodeSelectBlockHeight": "Block Height",
          "nodeSelectInfo": "Top {nodeCount, number} nodes listed",
          "nodeSelectPanelHeader": "Node Selection",
          "nodeSelectSelectAutomatically": "Select automatically",
          "nodeSelectionInstructions": "If youâ€™re experiencing performance issues, try selecting a custom node below",
          "nothingToSeeHere": "Nothing to see here!",
          "notifications.failure.blockchainInfoFailure": "Failed to retrieve blockchain information.",
          "notifications.success.accountSaved": "Account saved!",
          "notifications.success.receivedBlockchainInfo": "Received latest blockchain information.",
          "notifications.success.updatedWalletName": "Succesfully updated wallet name.",
          "numberofTransactionsPending": "{transferCount, number} {transferCount, plural, one {Transfer} other {Transfers}} pending",
          "previousStep": "Previous Step",
          "print": "Print",
          "priorityTransfer": "Priority Transfer",
          "privateKey": "Private Key",
          "privateKeyLabel": "PRIVATE KEY",
          "publicAddress": "Public Address",
          "receiveAssetsAddressLabel": "Your Public Address",
          "receiveCopyCodeButton": "Copy Code Image",
          "receiveDisclaimer": "Only send assets that are <b>compatible with the NEO blockchain (NEO, GAS, etc.)</b>. Sending other assets will result in permanent loss.",
          "receivePageLabel": "Receive Assets",
          "receiveQRExplanation": "<p>Ever sent assets to the wrong address because of an errant character in the wallet address?</p><p>If not, lucky you - but it happens with frightening regularity.</p>  <p>Here at CoZ, we want to ensure people that pay you get your details right. You can generate a QR code for requesting assets to help them help you.</p><p>Every code you generate will include your public wallet address, an asset amount and a reference - all set by you.</p>",
          "receiveRequestTabAssets": "REQUEST ASSETS",
          "receiveYourAddressTabLabel": "YOUR ADDRESS",
          "recieveSelectMethod": "Select Deposit Method",
          "recieveWhyUseQRLabel": "Why use a QR code?",
          "recoverWallet": "Recover wallet",
          "recoverWalletLabel": "RECOVER WALLET",
          "removeContact": "Remove Contact",
          "requestAssetAmount": "AMOUNT",
          "requestAssetAmountLabel": "Amount",
          "requestAssetDepositLabel": "DEPOSIT INTO THIS WALLET",
          "requestAssetLabel": "ASSET",
          "requestAssetQRButton": "Generate QR Code",
          "requestAssetRefLabel": "REFERENCE",
          "requestAssetRefPlaceholder": "Add a note...",
          "requestAssetYourQRHeader": "Your QR Code",
          "requestAssetsAddressLabel": "ADDRESS",
          "requestAssetsAmountLabel": "AMOUNT",
          "requestAssetsAssetLabel": "ASSET",
          "requestAssetsPaymentDetails": "PAYMENT REQUEST DETAILS",
          "requestAssetsRefLabel": "REFERENCE",
          "requestAssetsYourQRLabel": "YOUR QR CODE",
          "saveContactButtonText": "Save Contact",
          "selectAssets": "Select Assets",
          "sendActivityLink": "Check the activity tab to see the status of your transaction.",
          "sendAdd": "Add Recipient",
          "sendAddressLabel": "RECIPIENT ADDRESS",
          "sendAddressPlaceholder": "Add wallet or select contact",
          "sendAmountLabel": "AMOUNT",
          "sendAsset": "asset",
          "sendAssetCapital": "Asset",
          "sendAssetLabel": "ASSET",
          "sendAssets": "assets",
          "sendAssetsCapital": "Assets",
          "sendBroadcasting": "Broadcasting transaction to network...",
          "sendCompleteNotification": "Transaction pending! Your balance will automatically update when the blockchain has processed it.",
          "sendCompletion": "Complete! {transferCount, number} {transferCount, plural, one {sendAsset} other {sendAssets}} to {transferCount, plural, one {sendRecipient} other {sendRecipients}}",
          "sendDisclaimer": "Please review and ensure that you have entered the correct details to avoid loss of funds.",
          "sendEnterQRCode": "Enter QR Code",
          "sendErrorLabel": "Error!",
          "sendImport": "Import",
          "sendMaxAmount": "MAX",
          "sendMoreAssets": "Send More Assets",
          "sendPageLabel": "Send Assets",
          "sendQRExplanation": "So you've been given a QR code? Click capture and hold it up to your camera.",
          "sendRecipient": "recipient",
          "sendRecipientCapital": "Recipient",
          "sendRecipients": "recipients",
          "sendRecipientsCapital": "Recipients",
          "sendSelectAssets": "{transferCount, number} of {maxNumberOfRecipients, number} Recipients",
          "sendTranfer": "TRANSFER",
          "sendTransferMessage": "{transferCount, number} {transferCount, plural, one {sendTransfer} other {sendTransferPlural}} pending",
          "sendTransferPlural": "TRANSFERS",
          "sendWithFee": "Send {itemCount, plural, one {Asset} other {Assets}} With Fee",
          "sendWithoutFee": "Send {itemCount, plural, one {Asset} other {Assets}} Without Fee",
          "settingCurrencyLabel": "Currency",
          "settingsBackUpLink": "Export",
          "settingsBackUpLinkLabel": "Backup wallet",
          "settingsCommunity": "Community Support",
          "settingsDonationLink": "Created by CoZ. Donations:",
          "settingsEncryptLink": "Encrypt a key",
          "settingsLanguageLabel": "Language",
          "settingsManageLabel": "Manage your neon wallet",
          "settingsNetworkConfigLabel": "Network configuration",
          "settingsRecoverWalletLink": "Import",
          "settingsSoundLabel": "Sound",
          "settingsThemeLabel": "Theme",
          "sidebarActivity": "Activity",
          "sidebarContacts": "Contacts",
          "sidebarCurrentBlock": "CURRENT BLOCK",
          "sidebarLogout": "Logout",
          "sidebarNews": "News",
          "sidebarReceive": "Receive",
          "sidebarSend": "Send",
          "sidebarSettings": "Settings",
          "sidebarTokenSale": "Token Sale",
          "sidebarWallet": "Wallet",
          "splitKeyLabel": "SPLIT KEY",
          "splitKeyWalletInstructions": "The Split Key import option allows users to create a new NEO account by combining the private key of an existing account with a separate private key.",
          "splitKeyWalletNamePlaceholder": "Enter your new split key wallet name...",
          "takeMeBack": "Take me back",
          "tokenSaleDisclaimer1": "Please read and acknowledge these statements to continue",
          "tokenSaleDisclaimer2": "I understand that submitting NEO or GAS multiple times may result in a loss of funds or a delayed refund depending on the policy of the ICO company.",
          "tokenSaleDisclaimer3": "I understand that some sales may only accept NEO or GAS, and I have verified which is accepted.",
          "tokenSaleDisclaimer4": "I understand that if I send NEO or GAS to a token sale that has already ended, I will lose my NEO/GAS and will not be refunded.",
          "tokenSaleDisclaimer5": "I understand that City of Zion (CoZ) is not responsible for my usage of this feature, and I have consulted this software's licenses.",
          "tokenSalePageHeader": "Participate in Token Sale",
          "transactionFeeQuestion": "PRIORITIZE YOUR TRANSACTION WITH A FEE?",
          "transactionId": "Transaction ID:",
          "walletCreatedDisclaimer": "<b>Save these details!</b> If you lose these credentials, you lose access to your assets.",
          "walletCreatedHeader": "Wallet Created!",
          "walletCreationButton": "Create Wallet",
          "walletCreationInstruction": "Enter Details",
          "walletCreationWalletNameLabel": "WALLET NAME",
          "walletCreationWalletNamePlaceholder": "Wallet Name",
          "walletCreationWalletPasswordConfirmLabel": "CONFIRM PASSPHRASE",
          "walletCreationWalletPasswordConfirmPlaceholder": "Confirm Password",
          "walletCreationWalletPasswordLabel": "PASSPHRASE",
          "walletCreationWalletPasswordPlaceholder": "Password",
          "walletImportedHeader": "Wallet Created!",
          "walletManagerNoLocalInfo": "It looks like you have no wallet information saved locally...",
          "walletManagerRemoveWallet": "Remove Wallet",
          "walletQrCodes": "Wallet QR Codes",
        }
      }
      onError={[Function]}
      textComponent={Symbol(react.fragment)}
    >
      <MemoryRouter
        initialEntries={
          Array [
            "/",
          ]
        }
        keyLength={0}
      >
        <Router
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
        >
          <Connect(Connect(withData(withProps(Connect(withCall(Connect(withData(Connect(withData(Connect(withData(injectIntl(NetworkConfigurationTooltip)))))))))))))
            blockExplorer="Dora"
          >
            <Connect(withData(withProps(Connect(withCall(Connect(withData(Connect(withData(Connect(withData(injectIntl(NetworkConfigurationTooltip))))))))))))
              blockExplorer="Dora"
              networks={
                Array [
                  Object {
                    "deprecatedLabel": "MainNet",
                    "id": "1",
                    "label": "2.x MainNet",
                    "network": "MainNet",
                    "value": "1",
                  },
                  Object {
                    "deprecatedLabel": "TestNet",
                    "id": "2",
                    "label": "2.x TestNet",
                    "network": "TestNet",
                    "value": "2",
                  },
                  Object {
                    "deprecatedLabel": "Custom",
                    "id": "Custom",
                    "label": "Custom",
                    "network": "Custom",
                    "value": "Custom",
                  },
                ]
              }
              showErrorNotification={[Function]}
              showModal={[Function]}
              showSuccessNotification={[Function]}
            >
              <withData(withProps(Connect(withCall(Connect(withData(Connect(withData(Connect(withData(injectIntl(NetworkConfigurationTooltip)))))))))))
                blockExplorer="Dora"
                dispatch={[Function]}
                networkId={1}
                networks={
                  Array [
                    Object {
                      "deprecatedLabel": "MainNet",
                      "id": "1",
                      "label": "2.x MainNet",
                      "network": "MainNet",
                      "value": "1",
                    },
                    Object {
                      "deprecatedLabel": "TestNet",
                      "id": "2",
                      "label": "2.x TestNet",
                      "network": "TestNet",
                      "value": "2",
                    },
                    Object {
                      "deprecatedLabel": "Custom",
                      "id": "Custom",
                      "label": "Custom",
                      "network": "Custom",
                      "value": "Custom",
                    },
                  ]
                }
                showErrorNotification={[Function]}
                showModal={[Function]}
                showSuccessNotification={[Function]}
              >
                <Connect(withCall(Connect(withData(Connect(withData(Connect(withData(injectIntl(NetworkConfigurationTooltip)))))))))
                  blockExplorer="Dora"
                  dispatch={[Function]}
                  net="MainNet"
                  networkId={1}
                  networks={
                    Array [
                      Object {
                        "deprecatedLabel": "MainNet",
                        "id": "1",
                        "label": "2.x MainNet",
                        "network": "MainNet",
                        "value": "1",
                      },
                      Object {
                        "deprecatedLabel": "TestNet",
                        "id": "2",
                        "label": "2.x TestNet",
                        "network": "TestNet",
                        "value": "2",
                      },
                      Object {
                        "deprecatedLabel": "Custom",
                        "id": "Custom",
                        "label": "Custom",
                        "network": "Custom",
                        "value": "Custom",
                      },
                    ]
                  }
                  showErrorNotification={[Function]}
                  showModal={[Function]}
                  showSuccessNotification={[Function]}
                >
                  <withCall(Connect(withData(Connect(withData(Connect(withData(injectIntl(NetworkConfigurationTooltip))))))))
                    blockExplorer="Dora"
                    dispatch={[Function]}
                    net="MainNet"
                    networkId={1}
                    networks={
                      Array [
                        Object {
                          "deprecatedLabel": "MainNet",
                          "id": "1",
                          "label": "2.x MainNet",
                          "network": "MainNet",
                          "value": "1",
                        },
                        Object {
                          "deprecatedLabel": "TestNet",
                          "id": "2",
                          "label": "2.x TestNet",
                          "network": "TestNet",
                          "value": "2",
                        },
                        Object {
                          "deprecatedLabel": "Custom",
                          "id": "Custom",
                          "label": "Custom",
                          "network": "Custom",
                          "value": "Custom",
                        },
                      ]
                    }
                    performAction={[Function]}
                    showErrorNotification={[Function]}
                    showModal={[Function]}
                    showSuccessNotification={[Function]}
                  >
                    <withoutProps(Connect(withData(Connect(withData(Connect(withData(injectIntl(NetworkConfigurationTooltip))))))))
                      blockExplorer="Dora"
                      dispatch={[Function]}
                      net="MainNet"
                      networkId={1}
                      networks={
                        Array [
                          Object {
                            "deprecatedLabel": "MainNet",
                            "id": "1",
                            "label": "2.x MainNet",
                            "network": "MainNet",
                            "value": "1",
                          },
                          Object {
                            "deprecatedLabel": "TestNet",
                            "id": "2",
                            "label": "2.x TestNet",
                            "network": "TestNet",
                            "value": "2",
                          },
                          Object {
                            "deprecatedLabel": "Custom",
                            "id": "Custom",
                            "label": "Custom",
                            "network": "Custom",
                            "value": "Custom",
                          },
                        ]
                      }
                      performAction={[Function]}
                      showErrorNotification={[Function]}
                      showModal={[Function]}
                      showSuccessNotification={[Function]}
                    >
                      <Connect(withData(Connect(withData(Connect(withData(injectIntl(NetworkConfigurationTooltip)))))))
                        blockExplorer="Dora"
                        dispatch={[Function]}
                        net="MainNet"
                        networkId={1}
                        networks={
                          Array [
                            Object {
                              "deprecatedLabel": "MainNet",
                              "id": "1",
                              "label": "2.x MainNet",
                              "network": "MainNet",
                              "value": "1",
                            },
                            Object {
                              "deprecatedLabel": "TestNet",
                              "id": "2",
                              "label": "2.x TestNet",
                              "network": "TestNet",
                              "value": "2",
                            },
                            Object {
                              "deprecatedLabel": "Custom",
                              "id": "Custom",
                              "label": "Custom",
                              "network": "Custom",
                              "value": "Custom",
                            },
                          ]
                        }
                        showErrorNotification={[Function]}
                        showModal={[Function]}
                        showSuccessNotification={[Function]}
                      >
                        <withData(Connect(withData(Connect(withData(injectIntl(NetworkConfigurationTooltip))))))
                          accounts={null}
                          blockExplorer="Dora"
                          dispatch={[Function]}
                          net="MainNet"
                          networkId={1}
                          networks={
                            Array [
                              Object {
                                "deprecatedLabel": "MainNet",
                                "id": "1",
                                "label": "2.x MainNet",
                                "network": "MainNet",
                                "value": "1",
                              },
                              Object {
                                "deprecatedLabel": "TestNet",
                                "id": "2",
                                "label": "2.x TestNet",
                                "network": "TestNet",
                                "value": "2",
                              },
                              Object {
                                "deprecatedLabel": "Custom",
                                "id": "Custom",
                                "label": "Custom",
                                "network": "Custom",
                                "value": "Custom",
                              },
                            ]
                          }
                          showErrorNotification={[Function]}
                          showModal={[Function]}
                          showSuccessNotification={[Function]}
                        >
                          <withData(Connect(withData(injectIntl(NetworkConfigurationTooltip))))
                            accounts={null}
                            blockExplorer="Dora"
                            dispatch={[Function]}
                            net="MainNet"
                            networkId={1}
                            networks={
                              Array [
                                Object {
                                  "deprecatedLabel": "MainNet",
                                  "id": "1",
                                  "label": "2.x MainNet",
                                  "network": "MainNet",
                                  "value": "1",
                                },
                                Object {
                                  "deprecatedLabel": "TestNet",
                                  "id": "2",
                                  "label": "2.x TestNet",
                                  "network": "TestNet",
                                  "value": "2",
                                },
                                Object {
                                  "deprecatedLabel": "Custom",
                                  "id": "Custom",
                                  "label": "Custom",
                                  "network": "Custom",
                                  "value": "Custom",
                                },
                              ]
                            }
                            selectedNode={null}
                            showErrorNotification={[Function]}
                            showModal={[Function]}
                            showSuccessNotification={[Function]}
                          >
                            <withData(injectIntl(NetworkConfigurationTooltip))
                              accounts={null}
                              address="TOOLTIP_TEST"
                              blockExplorer="Dora"
                              dispatch={[Function]}
                              isWatchOnly={false}
                              net="MainNet"
                              networkId={1}
                              networks={
                                Array [
                                  Object {
                                    "deprecatedLabel": "MainNet",
                                    "id": "1",
                                    "label": "2.x MainNet",
                                    "network": "MainNet",
                                    "value": "1",
                                  },
                                  Object {
                                    "deprecatedLabel": "TestNet",
                                    "id": "2",
                                    "label": "2.x TestNet",
                                    "network": "TestNet",
                                    "value": "2",
                                  },
                                  Object {
                                    "deprecatedLabel": "Custom",
                                    "id": "Custom",
                                    "label": "Custom",
                                    "network": "Custom",
                                    "value": "Custom",
                                  },
                                ]
                              }
                              selectedNode={null}
                              showErrorNotification={[Function]}
                              showModal={[Function]}
                              showSuccessNotification={[Function]}
                            >
                              <NetworkConfigurationTooltip
                                accounts={null}
                                address="TOOLTIP_TEST"
                                blockExplorer="Dora"
                                dispatch={[Function]}
                                intl={
                                  Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "formatDate": [Function],
                                    "formatDateToParts": [Function],
                                    "formatDisplayName": [Function],
                                    "formatHTMLMessage": [Function],
                                    "formatList": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatNumberToParts": [Function],
                                    "formatPlural": [Function],
                                    "formatRelativeTime": [Function],
                                    "formatTime": [Function],
                                    "formatTimeToParts": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getDisplayNames": [Function],
                                      "getListFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralRules": [Function],
                                      "getRelativeTimeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {
                                      "Asset": "Assetasdasd",
                                      "activityAddAddress": "Add",
                                      "activityExport": "Export",
                                      "activityPageLabel": "All Activity",
                                      "activityViewTx": "View",
                                      "addAContact": "Add A Contact",
                                      "addContactDetails": "Add Contact Details",
                                      "addToContacts": "Add to contacts",
                                      "addToken": "Add Token",
                                      "addressLabel": "PUBLIC ADDRESS",
                                      "assetRecipients": "Asset {transferCount, plural, one {Recipient} other {Recipients}}",
                                      "assets": "Assets",
                                      "auth.cancel": "Cancel",
                                      "auth.import.recoveryInstructions": "Upload a JSON wallet recovery file here to add your accounts to Neon. This option is also available on the Settings page.",
                                      "auth.ledger.connectLedger": "Connect and unlock your <strong>Ledger device</strong>",
                                      "auth.ledger.fetchAddress": "Fetch additional addresses",
                                      "auth.ledger.navigateToNeoApp": "Navigate to the <strong>NEO app</strong> on your device",
                                      "auth.ledger.retry": "Retry?",
                                      "authCreateWallet": "Create Wallet",
                                      "authEncrypted": "ENCRYPTED",
                                      "authImportWallet": "Import Wallet",
                                      "authLedger": "LEDGER",
                                      "authLedgerAddressLabel": "PUBLIC ADDRESS",
                                      "authLedgerFirstStep": "Connect and unlock your Ledger device",
                                      "authLedgerSecondStep": "Navigate to the NEO app on your device",
                                      "authLogin": "Login",
                                      "authLoginButton": "Login",
                                      "authPrivate": "PRIVATE",
                                      "authPrivateKeyPlaceholder": "Enter your private key here",
                                      "authSaved": "SAVED",
                                      "authScanQRButton": "Scan QR",
                                      "authWatch": "WATCH",
                                      "authWatchPlaceholder": "Enter a NEO address here",
                                      "automaticNodeSelectionTooltip": "Allow NEON to choose a node automatically",
                                      "captureQR": "Capture",
                                      "captureQRCaps": "CAPTURE",
                                      "chooseAccount": "Choose an Existing Account",
                                      "claimFeeDisclaimerN3": "Claiming GAS requires at least 0.01120527 GAS for transaction fees",
                                      "claimFeeGreater": "Claimable GAS is less than transaction fees",
                                      "claimTimeDisclaimer": "You can claim GAS once every 5 minutes",
                                      "claimUnavailableInWatch": "GAS claims are unavailable in Watch mode",
                                      "completeExclaim": "Complete!",
                                      "confirmAndSend": "Confirm & Send",
                                      "confirmRemoveContact": "Please confirm removing contact",
                                      "confirmation": "Confirmation",
                                      "confirmationRecipient": "{transferCount, number} {transferCount, plural, one {Recipient} other {Recipients}}",
                                      "contactName": "Name",
                                      "contactWalletAddress": "Wallet Address",
                                      "contactsPageLabel": "Manage Contacts",
                                      "copyAddressTooltip": "Copy Wallet Address",
                                      "copyCodeImage": "Copy Code Image",
                                      "createANewWallet": "Create New Wallet",
                                      "dashboardAddressLabel": "Address:",
                                      "dashboardAssetsPanelLabel": "System Assets",
                                      "dashboardAssetsTotal": "TOTAL",
                                      "dashboardBalancePanelLabel": "Token Balances",
                                      "dashboardGasClaimButton": "Claim {amount} GAS",
                                      "dashboardManageWallets": "Manage Wallets",
                                      "dashboardMarketData1Day": "1 DAY",
                                      "dashboardMarketData1Month": "1 MONTH",
                                      "dashboardMarketData1Week": "1 WEEK",
                                      "dashboardMarketDataLabel": "Market Data",
                                      "dashboardPriceNotAvailable": "N/A",
                                      "dashboardRefresh": "Refresh",
                                      "dashboardTokenBalancesHoldings": "HOLDINGS",
                                      "dashboardTokenBalancesPrice": "PRICE",
                                      "dashboardTokenBalancesToken": "Token",
                                      "dashboardValueLabel": "Total Wallet Value",
                                      "deleteLabel": "Delete",
                                      "depositAssets": "Deposit assets <b> compatible  with the NEO blockchain </b> using your address:",
                                      "editAContact": "Edit A Contact",
                                      "editContactDisclaimer": "Please review and ensure that you have entered the address correctly to avoid loss of funds",
                                      "editRecipients": "Edit Recipients",
                                      "encryptButton": "Generate Encrypted Key",
                                      "encryptInstructions": "Choose a passphrase to encrypt an existing key",
                                      "encryptPanelHeader": "Encrypt a key",
                                      "encryptStep1Label": "1) ENTER THE PRIVATE KEY YOU WANT TO ENCRYPT",
                                      "encryptStep1Placeholder": "Enter key",
                                      "encryptStep2Label": "2) CREATE A PASSPHRASE",
                                      "encryptStep2Placeholder": "Enter Passphrase",
                                      "encryptStep3Label": "3) CONFIM YOUR PASSPHRASE",
                                      "encryptStep3Placeholder": "Confirm Passphrase",
                                      "encryptedKeyLabel": "ENCRYPTED KEY",
                                      "enterAContactName": "Enter Contact Name...",
                                      "enterAWalletAddress": "Enter Wallet Address...",
                                      "errors.contact.contactExists": "You already have a contact with that address.",
                                      "errors.contact.invalidAddress": "Address is not valid.",
                                      "errors.contact.nameDupe": "You already have an account saved with that name.",
                                      "errors.contact.nameLength": "Name is too long.",
                                      "errors.contact.nameNull": "Name can't be null.",
                                      "errors.encrypt.valid": "The private key is not valid.",
                                      "errors.network.general": "Oops! Something went wrong...",
                                      "errors.password.length": "Passphrase must contain at least {PASS_MIN_LENGTH, number} characters.",
                                      "errors.password.match": "Passphrases must match.",
                                      "errors.request.fractional": "You canot request fractional {asset}.",
                                      "errors.request.max": "You cannot request more than 100,000,000 {asset}.",
                                      "errors.request.min": "You cannot request 0 {asset}.",
                                      "errors.request.validDecimals": "You can only request {asset} up to {validDecimals, number} decimals.",
                                      "errors.send.balance": "You do not have enough balance to send {total} {asset}.",
                                      "errors.send.blackListed": "Address is blacklisted. This is a known phishing address.",
                                      "errors.send.decimal": "You can only send {asset} up to {decimalCount, number} decimals.",
                                      "errors.send.fraction": "You cannot send fractional amounts of NEO.",
                                      "errors.send.invalidAddress": "You need to specify a valid NEO address.",
                                      "errors.send.invalidN3Address": "You need to specify a valid NEO N3 address.",
                                      "errors.send.negative": "You cannot send negative amounts of {asset}.",
                                      "errors.send.network": "A network error has occurred",
                                      "errors.send.number": "Amount must be a number.",
                                      "errors.send.zero": "Can not send 0 {asset}.",
                                      "fast": "Fast",
                                      "faster": "Faster",
                                      "fastest": "Fastest",
                                      "fee": "Fee:",
                                      "generateQrCodes": "Generate QR Codes",
                                      "importFile": "Import File",
                                      "inputEncryptedPlaceholder": "Encrypted Key",
                                      "inputPasswordPlaceholder": "Password",
                                      "inputSelectPlaceholder": "Select",
                                      "isLoadingMessage": "Loading...",
                                      "manageWalletsCreate": "Create",
                                      "manageWalletsEdit": "Edit",
                                      "manageWalletsEditWallet": "Edit Wallet",
                                      "manageWalletsEditWalletAddressLabel": "WALLET ADDRESS",
                                      "manageWalletsEditWalletInstructions": "Modify Details",
                                      "manageWalletsEditWalletNameLabel": "WALLET NAME",
                                      "manageWalletsEditWalletNamePlaceholder": "Wallet Name",
                                      "manageWalletsEditWalletSave": "Save Changes",
                                      "manageWalletsImport": "Import",
                                      "manageWalletsLabel": "Manage Wallets",
                                      "modalActionCancel": "Cancel",
                                      "modalActionConfirm": "Confirm",
                                      "modifyDetails": "Modify Details",
                                      "networkConfigTooltipAddress": "ADDRESS:",
                                      "networkConfigTooltipPublicKey": "PUBLIC KEY:",
                                      "networkConfigTooltipUpdateSettings": "Update Settings",
                                      "networkConfigTooltipVotedNode": "VOTE CAST FOR:",
                                      "networkSettingsAutomatic": "AUTOMATIC",
                                      "networkSettingsCurrentLabel": "CURRENT NETWORK",
                                      "networkSettingsExplorerLabel": "BLOCK EXPLORER",
                                      "networkSettingsInstructions": "Manage all network settings related to how Neon interacts with the blockchain",
                                      "networkSettingsLabel": "Network Settings",
                                      "networkSettingsNodeSelectLabel": "NODE SELECTION",
                                      "newContact": "New Contact",
                                      "newsPageLabel": "News",
                                      "nextStep": "Next Step",
                                      "noAvailableAssetsToSend": "No available assets to send",
                                      "noClaimableGas": "Address has no claimable GAS",
                                      "noOptionsMessage": "No options",
                                      "nodeSelectBlockHeight": "Block Height",
                                      "nodeSelectInfo": "Top {nodeCount, number} nodes listed",
                                      "nodeSelectPanelHeader": "Node Selection",
                                      "nodeSelectSelectAutomatically": "Select automatically",
                                      "nodeSelectionInstructions": "If youâ€™re experiencing performance issues, try selecting a custom node below",
                                      "nothingToSeeHere": "Nothing to see here!",
                                      "notifications.failure.blockchainInfoFailure": "Failed to retrieve blockchain information.",
                                      "notifications.success.accountSaved": "Account saved!",
                                      "notifications.success.receivedBlockchainInfo": "Received latest blockchain information.",
                                      "notifications.success.updatedWalletName": "Succesfully updated wallet name.",
                                      "numberofTransactionsPending": "{transferCount, number} {transferCount, plural, one {Transfer} other {Transfers}} pending",
                                      "previousStep": "Previous Step",
                                      "print": "Print",
                                      "priorityTransfer": "Priority Transfer",
                                      "privateKey": "Private Key",
                                      "privateKeyLabel": "PRIVATE KEY",
                                      "publicAddress": "Public Address",
                                      "receiveAssetsAddressLabel": "Your Public Address",
                                      "receiveCopyCodeButton": "Copy Code Image",
                                      "receiveDisclaimer": "Only send assets that are <b>compatible with the NEO blockchain (NEO, GAS, etc.)</b>. Sending other assets will result in permanent loss.",
                                      "receivePageLabel": "Receive Assets",
                                      "receiveQRExplanation": "<p>Ever sent assets to the wrong address because of an errant character in the wallet address?</p><p>If not, lucky you - but it happens with frightening regularity.</p>  <p>Here at CoZ, we want to ensure people that pay you get your details right. You can generate a QR code for requesting assets to help them help you.</p><p>Every code you generate will include your public wallet address, an asset amount and a reference - all set by you.</p>",
                                      "receiveRequestTabAssets": "REQUEST ASSETS",
                                      "receiveYourAddressTabLabel": "YOUR ADDRESS",
                                      "recieveSelectMethod": "Select Deposit Method",
                                      "recieveWhyUseQRLabel": "Why use a QR code?",
                                      "recoverWallet": "Recover wallet",
                                      "recoverWalletLabel": "RECOVER WALLET",
                                      "removeContact": "Remove Contact",
                                      "requestAssetAmount": "AMOUNT",
                                      "requestAssetAmountLabel": "Amount",
                                      "requestAssetDepositLabel": "DEPOSIT INTO THIS WALLET",
                                      "requestAssetLabel": "ASSET",
                                      "requestAssetQRButton": "Generate QR Code",
                                      "requestAssetRefLabel": "REFERENCE",
                                      "requestAssetRefPlaceholder": "Add a note...",
                                      "requestAssetYourQRHeader": "Your QR Code",
                                      "requestAssetsAddressLabel": "ADDRESS",
                                      "requestAssetsAmountLabel": "AMOUNT",
                                      "requestAssetsAssetLabel": "ASSET",
                                      "requestAssetsPaymentDetails": "PAYMENT REQUEST DETAILS",
                                      "requestAssetsRefLabel": "REFERENCE",
                                      "requestAssetsYourQRLabel": "YOUR QR CODE",
                                      "saveContactButtonText": "Save Contact",
                                      "selectAssets": "Select Assets",
                                      "sendActivityLink": "Check the activity tab to see the status of your transaction.",
                                      "sendAdd": "Add Recipient",
                                      "sendAddressLabel": "RECIPIENT ADDRESS",
                                      "sendAddressPlaceholder": "Add wallet or select contact",
                                      "sendAmountLabel": "AMOUNT",
                                      "sendAsset": "asset",
                                      "sendAssetCapital": "Asset",
                                      "sendAssetLabel": "ASSET",
                                      "sendAssets": "assets",
                                      "sendAssetsCapital": "Assets",
                                      "sendBroadcasting": "Broadcasting transaction to network...",
                                      "sendCompleteNotification": "Transaction pending! Your balance will automatically update when the blockchain has processed it.",
                                      "sendCompletion": "Complete! {transferCount, number} {transferCount, plural, one {sendAsset} other {sendAssets}} to {transferCount, plural, one {sendRecipient} other {sendRecipients}}",
                                      "sendDisclaimer": "Please review and ensure that you have entered the correct details to avoid loss of funds.",
                                      "sendEnterQRCode": "Enter QR Code",
                                      "sendErrorLabel": "Error!",
                                      "sendImport": "Import",
                                      "sendMaxAmount": "MAX",
                                      "sendMoreAssets": "Send More Assets",
                                      "sendPageLabel": "Send Assets",
                                      "sendQRExplanation": "So you've been given a QR code? Click capture and hold it up to your camera.",
                                      "sendRecipient": "recipient",
                                      "sendRecipientCapital": "Recipient",
                                      "sendRecipients": "recipients",
                                      "sendRecipientsCapital": "Recipients",
                                      "sendSelectAssets": "{transferCount, number} of {maxNumberOfRecipients, number} Recipients",
                                      "sendTranfer": "TRANSFER",
                                      "sendTransferMessage": "{transferCount, number} {transferCount, plural, one {sendTransfer} other {sendTransferPlural}} pending",
                                      "sendTransferPlural": "TRANSFERS",
                                      "sendWithFee": "Send {itemCount, plural, one {Asset} other {Assets}} With Fee",
                                      "sendWithoutFee": "Send {itemCount, plural, one {Asset} other {Assets}} Without Fee",
                                      "settingCurrencyLabel": "Currency",
                                      "settingsBackUpLink": "Export",
                                      "settingsBackUpLinkLabel": "Backup wallet",
                                      "settingsCommunity": "Community Support",
                                      "settingsDonationLink": "Created by CoZ. Donations:",
                                      "settingsEncryptLink": "Encrypt a key",
                                      "settingsLanguageLabel": "Language",
                                      "settingsManageLabel": "Manage your neon wallet",
                                      "settingsNetworkConfigLabel": "Network configuration",
                                      "settingsRecoverWalletLink": "Import",
                                      "settingsSoundLabel": "Sound",
                                      "settingsThemeLabel": "Theme",
                                      "sidebarActivity": "Activity",
                                      "sidebarContacts": "Contacts",
                                      "sidebarCurrentBlock": "CURRENT BLOCK",
                                      "sidebarLogout": "Logout",
                                      "sidebarNews": "News",
                                      "sidebarReceive": "Receive",
                                      "sidebarSend": "Send",
                                      "sidebarSettings": "Settings",
                                      "sidebarTokenSale": "Token Sale",
                                      "sidebarWallet": "Wallet",
                                      "splitKeyLabel": "SPLIT KEY",
                                      "splitKeyWalletInstructions": "The Split Key import option allows users to create a new NEO account by combining the private key of an existing account with a separate private key.",
                                      "splitKeyWalletNamePlaceholder": "Enter your new split key wallet name...",
                                      "takeMeBack": "Take me back",
                                      "tokenSaleDisclaimer1": "Please read and acknowledge these statements to continue",
                                      "tokenSaleDisclaimer2": "I understand that submitting NEO or GAS multiple times may result in a loss of funds or a delayed refund depending on the policy of the ICO company.",
                                      "tokenSaleDisclaimer3": "I understand that some sales may only accept NEO or GAS, and I have verified which is accepted.",
                                      "tokenSaleDisclaimer4": "I understand that if I send NEO or GAS to a token sale that has already ended, I will lose my NEO/GAS and will not be refunded.",
                                      "tokenSaleDisclaimer5": "I understand that City of Zion (CoZ) is not responsible for my usage of this feature, and I have consulted this software's licenses.",
                                      "tokenSalePageHeader": "Participate in Token Sale",
                                      "transactionFeeQuestion": "PRIORITIZE YOUR TRANSACTION WITH A FEE?",
                                      "transactionId": "Transaction ID:",
                                      "walletCreatedDisclaimer": "<b>Save these details!</b> If you lose these credentials, you lose access to your assets.",
                                      "walletCreatedHeader": "Wallet Created!",
                                      "walletCreationButton": "Create Wallet",
                                      "walletCreationInstruction": "Enter Details",
                                      "walletCreationWalletNameLabel": "WALLET NAME",
                                      "walletCreationWalletNamePlaceholder": "Wallet Name",
                                      "walletCreationWalletPasswordConfirmLabel": "CONFIRM PASSPHRASE",
                                      "walletCreationWalletPasswordConfirmPlaceholder": "Confirm Password",
                                      "walletCreationWalletPasswordLabel": "PASSPHRASE",
                                      "walletCreationWalletPasswordPlaceholder": "Password",
                                      "walletImportedHeader": "Wallet Created!",
                                      "walletManagerNoLocalInfo": "It looks like you have no wallet information saved locally...",
                                      "walletManagerRemoveWallet": "Remove Wallet",
                                      "walletQrCodes": "Wallet QR Codes",
                                    },
                                    "onError": [Function],
                                    "textComponent": Symbol(react.fragment),
                                    "timeZone": undefined,
                                  }
                                }
                                isWatchOnly={false}
                                net="MainNet"
                                networkId={1}
                                networks={
                                  Array [
                                    Object {
                                      "deprecatedLabel": "MainNet",
                                      "id": "1",
                                      "label": "2.x MainNet",
                                      "network": "MainNet",
                                      "value": "1",
                                    },
                                    Object {
                                      "deprecatedLabel": "TestNet",
                                      "id": "2",
                                      "label": "2.x TestNet",
                                      "network": "TestNet",
                                      "value": "2",
                                    },
                                    Object {
                                      "deprecatedLabel": "Custom",
                                      "id": "Custom",
                                      "label": "Custom",
                                      "network": "Custom",
                                      "value": "Custom",
                                    },
                                  ]
                                }
                                selectedNode={null}
                                showErrorNotification={[Function]}
                                showModal={[Function]}
                                showSuccessNotification={[Function]}
                              >
                                <section
                                  className="settingsItemsContainer tooltipContainer"
                                  id="network-config-tooltip"
                                >
                                  <HashRouter>
                                    <Router
                                      history={
                                        Object {
                                          "action": "POP",
                                          "block": [Function],
                                          "createHref": [Function],
                                          "go": [Function],
                                          "goBack": [Function],
                                          "goForward": [Function],
                                          "length": 1,
                                          "listen": [Function],
                                          "location": Object {
                                            "hash": "",
                                            "pathname": "/",
                                            "search": "",
                                            "state": undefined,
                                          },
                                          "push": [Function],
                                          "replace": [Function],
                                        }
                                      }
                                    >
                                      <div
                                        className="innerContainer"
                                      >
                                        <div
                                          className="addressInfo"
                                        >
                                          <span>
                                            ADDRESS:
                                          </span>
                                          <div
                                            className="addressLink"
                                          >
                                             
                                            TOOLTIP_TEST
                                          </div>
                                        </div>
                                        <SettingsLink
                                          label="AUTOMATIC"
                                          noBorderBottom={true}
                                          onClick={[Function]}
                                          renderIcon={[Function]}
                                          title="NODE SELECTION"
                                          to="/node-select"
                                          tooltip={true}
                                        >
                                          <div
                                            className="settingsLink noBorderBottom defaultCursor"
                                            onClick={[Function]}
                                          >
                                            <div
                                              className="icon"
                                            >
                                              <Component>
                                                <svg />
                                              </Component>
                                               
                                            </div>
                                            <span
                                              className="settingsLinkLabel"
                                            >
                                              NODE SELECTION
                                            </span>
                                            <label
                                              className="greenLabel"
                                            >
                                              AUTOMATIC
                                            </label>
                                          </div>
                                        </SettingsLink>
                                        <div
                                          className="tooltipItemBorder"
                                        />
                                        <SettingsItem
                                          noBorderBottom={true}
                                          renderIcon={[Function]}
                                          title="BLOCK EXPLORER"
                                          tooltip={true}
                                        >
                                          <div
                                            className="settingsItem noBorderBottom"
                                          >
                                            <div
                                              className="icon"
                                            >
                                              <Component>
                                                <svg />
                                              </Component>
                                               
                                            </div>
                                            <span
                                              className="settingsItemLabel"
                                            >
                                              BLOCK EXPLORER
                                            </span>
                                            <div
                                              className="settingsSelectContainer"
                                            >
                                              <div
                                                className="configLabel"
                                              >
                                                DORA
                                              </div>
                                            </div>
                                          </div>
                                        </SettingsItem>
                                        <div
                                          className="tooltipItemBorder"
                                        />
                                        <SettingsItem
                                          noBorderBottom={true}
                                          renderIcon={[Function]}
                                          title="CURRENT NETWORK"
                                          tooltip={true}
                                        >
                                          <div
                                            className="settingsItem noBorderBottom"
                                          >
                                            <div
                                              className="icon"
                                            >
                                              <Component>
                                                <svg />
                                              </Component>
                                               
                                            </div>
                                            <span
                                              className="settingsItemLabel"
                                            >
                                              CURRENT NETWORK
                                            </span>
                                            <div>
                                              <div
                                                className="configLabel"
                                              >
                                                2.X MAINNET
                                              </div>
                                            </div>
                                          </div>
                                        </SettingsItem>
                                        <div
                                          className="tooltipItemBorder"
                                        />
                                        <div
                                          className="buttonContainer"
                                        >
                                          <Link
                                            replace={false}
                                            to="/settings"
                                          >
                                            <a
                                              href="#/settings"
                                              onClick={[Function]}
                                            >
                                              <Button
                                                outline={true}
                                                primary={false}
                                                renderIcon={[Function]}
                                                shouldCenterButtonLabelText={true}
                                                type="button"
                                              >
                                                <button
                                                  className="button secondary outline"
                                                  type="button"
                                                >
                                                  <span
                                                    className="icon centeredLabel secondary"
                                                  >
                                                    <Component>
                                                      <svg />
                                                    </Component>
                                                  </span>
                                                  <span>
                                                    Update Settings
                                                  </span>
                                                </button>
                                              </Button>
                                            </a>
                                          </Link>
                                        </div>
                                      </div>
                                    </Router>
                                  </HashRouter>
                                </section>
                              </NetworkConfigurationTooltip>
                            </withData(injectIntl(NetworkConfigurationTooltip))>
                          </withData(Connect(withData(injectIntl(NetworkConfigurationTooltip))))>
                        </withData(Connect(withData(Connect(withData(injectIntl(NetworkConfigurationTooltip))))))>
                      </Connect(withData(Connect(withData(Connect(withData(injectIntl(NetworkConfigurationTooltip)))))))>
                    </withoutProps(Connect(withData(Connect(withData(Connect(withData(injectIntl(NetworkConfigurationTooltip))))))))>
                  </withCall(Connect(withData(Connect(withData(Connect(withData(injectIntl(NetworkConfigurationTooltip))))))))>
                </Connect(withCall(Connect(withData(Connect(withData(Connect(withData(injectIntl(NetworkConfigurationTooltip)))))))))>
              </withData(withProps(Connect(withCall(Connect(withData(Connect(withData(Connect(withData(injectIntl(NetworkConfigurationTooltip)))))))))))>
            </Connect(withData(withProps(Connect(withCall(Connect(withData(Connect(withData(Connect(withData(injectIntl(NetworkConfigurationTooltip))))))))))))>
          </Connect(Connect(withData(withProps(Connect(withCall(Connect(withData(Connect(withData(Connect(withData(injectIntl(NetworkConfigurationTooltip)))))))))))))>
        </Router>
      </MemoryRouter>
    </IntlProvider>
  </IntlWrapper>
</Provider>
`;

exports[`renderNode with a node that has fallen out of top 21 renders warningicon with no vote 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <IntlWrapper
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <IntlProvider
      defaultFormats={Object {}}
      defaultLocale="en"
      formats={Object {}}
      locale="en"
      messages={
        Object {
          "Asset": "Assetasdasd",
          "activityAddAddress": "Add",
          "activityExport": "Export",
          "activityPageLabel": "All Activity",
          "activityViewTx": "View",
          "addAContact": "Add A Contact",
          "addContactDetails": "Add Contact Details",
          "addToContacts": "Add to contacts",
          "addToken": "Add Token",
          "addressLabel": "PUBLIC ADDRESS",
          "assetRecipients": "Asset {transferCount, plural, one {Recipient} other {Recipients}}",
          "assets": "Assets",
          "auth.cancel": "Cancel",
          "auth.import.recoveryInstructions": "Upload a JSON wallet recovery file here to add your accounts to Neon. This option is also available on the Settings page.",
          "auth.ledger.connectLedger": "Connect and unlock your <strong>Ledger device</strong>",
          "auth.ledger.fetchAddress": "Fetch additional addresses",
          "auth.ledger.navigateToNeoApp": "Navigate to the <strong>NEO app</strong> on your device",
          "auth.ledger.retry": "Retry?",
          "authCreateWallet": "Create Wallet",
          "authEncrypted": "ENCRYPTED",
          "authImportWallet": "Import Wallet",
          "authLedger": "LEDGER",
          "authLedgerAddressLabel": "PUBLIC ADDRESS",
          "authLedgerFirstStep": "Connect and unlock your Ledger device",
          "authLedgerSecondStep": "Navigate to the NEO app on your device",
          "authLogin": "Login",
          "authLoginButton": "Login",
          "authPrivate": "PRIVATE",
          "authPrivateKeyPlaceholder": "Enter your private key here",
          "authSaved": "SAVED",
          "authScanQRButton": "Scan QR",
          "authWatch": "WATCH",
          "authWatchPlaceholder": "Enter a NEO address here",
          "automaticNodeSelectionTooltip": "Allow NEON to choose a node automatically",
          "captureQR": "Capture",
          "captureQRCaps": "CAPTURE",
          "chooseAccount": "Choose an Existing Account",
          "claimFeeDisclaimerN3": "Claiming GAS requires at least 0.01120527 GAS for transaction fees",
          "claimFeeGreater": "Claimable GAS is less than transaction fees",
          "claimTimeDisclaimer": "You can claim GAS once every 5 minutes",
          "claimUnavailableInWatch": "GAS claims are unavailable in Watch mode",
          "completeExclaim": "Complete!",
          "confirmAndSend": "Confirm & Send",
          "confirmRemoveContact": "Please confirm removing contact",
          "confirmation": "Confirmation",
          "confirmationRecipient": "{transferCount, number} {transferCount, plural, one {Recipient} other {Recipients}}",
          "contactName": "Name",
          "contactWalletAddress": "Wallet Address",
          "contactsPageLabel": "Manage Contacts",
          "copyAddressTooltip": "Copy Wallet Address",
          "copyCodeImage": "Copy Code Image",
          "createANewWallet": "Create New Wallet",
          "dashboardAddressLabel": "Address:",
          "dashboardAssetsPanelLabel": "System Assets",
          "dashboardAssetsTotal": "TOTAL",
          "dashboardBalancePanelLabel": "Token Balances",
          "dashboardGasClaimButton": "Claim {amount} GAS",
          "dashboardManageWallets": "Manage Wallets",
          "dashboardMarketData1Day": "1 DAY",
          "dashboardMarketData1Month": "1 MONTH",
          "dashboardMarketData1Week": "1 WEEK",
          "dashboardMarketDataLabel": "Market Data",
          "dashboardPriceNotAvailable": "N/A",
          "dashboardRefresh": "Refresh",
          "dashboardTokenBalancesHoldings": "HOLDINGS",
          "dashboardTokenBalancesPrice": "PRICE",
          "dashboardTokenBalancesToken": "Token",
          "dashboardValueLabel": "Total Wallet Value",
          "deleteLabel": "Delete",
          "depositAssets": "Deposit assets <b> compatible  with the NEO blockchain </b> using your address:",
          "editAContact": "Edit A Contact",
          "editContactDisclaimer": "Please review and ensure that you have entered the address correctly to avoid loss of funds",
          "editRecipients": "Edit Recipients",
          "encryptButton": "Generate Encrypted Key",
          "encryptInstructions": "Choose a passphrase to encrypt an existing key",
          "encryptPanelHeader": "Encrypt a key",
          "encryptStep1Label": "1) ENTER THE PRIVATE KEY YOU WANT TO ENCRYPT",
          "encryptStep1Placeholder": "Enter key",
          "encryptStep2Label": "2) CREATE A PASSPHRASE",
          "encryptStep2Placeholder": "Enter Passphrase",
          "encryptStep3Label": "3) CONFIM YOUR PASSPHRASE",
          "encryptStep3Placeholder": "Confirm Passphrase",
          "encryptedKeyLabel": "ENCRYPTED KEY",
          "enterAContactName": "Enter Contact Name...",
          "enterAWalletAddress": "Enter Wallet Address...",
          "errors.contact.contactExists": "You already have a contact with that address.",
          "errors.contact.invalidAddress": "Address is not valid.",
          "errors.contact.nameDupe": "You already have an account saved with that name.",
          "errors.contact.nameLength": "Name is too long.",
          "errors.contact.nameNull": "Name can't be null.",
          "errors.encrypt.valid": "The private key is not valid.",
          "errors.network.general": "Oops! Something went wrong...",
          "errors.password.length": "Passphrase must contain at least {PASS_MIN_LENGTH, number} characters.",
          "errors.password.match": "Passphrases must match.",
          "errors.request.fractional": "You canot request fractional {asset}.",
          "errors.request.max": "You cannot request more than 100,000,000 {asset}.",
          "errors.request.min": "You cannot request 0 {asset}.",
          "errors.request.validDecimals": "You can only request {asset} up to {validDecimals, number} decimals.",
          "errors.send.balance": "You do not have enough balance to send {total} {asset}.",
          "errors.send.blackListed": "Address is blacklisted. This is a known phishing address.",
          "errors.send.decimal": "You can only send {asset} up to {decimalCount, number} decimals.",
          "errors.send.fraction": "You cannot send fractional amounts of NEO.",
          "errors.send.invalidAddress": "You need to specify a valid NEO address.",
          "errors.send.invalidN3Address": "You need to specify a valid NEO N3 address.",
          "errors.send.negative": "You cannot send negative amounts of {asset}.",
          "errors.send.network": "A network error has occurred",
          "errors.send.number": "Amount must be a number.",
          "errors.send.zero": "Can not send 0 {asset}.",
          "fast": "Fast",
          "faster": "Faster",
          "fastest": "Fastest",
          "fee": "Fee:",
          "generateQrCodes": "Generate QR Codes",
          "importFile": "Import File",
          "inputEncryptedPlaceholder": "Encrypted Key",
          "inputPasswordPlaceholder": "Password",
          "inputSelectPlaceholder": "Select",
          "isLoadingMessage": "Loading...",
          "manageWalletsCreate": "Create",
          "manageWalletsEdit": "Edit",
          "manageWalletsEditWallet": "Edit Wallet",
          "manageWalletsEditWalletAddressLabel": "WALLET ADDRESS",
          "manageWalletsEditWalletInstructions": "Modify Details",
          "manageWalletsEditWalletNameLabel": "WALLET NAME",
          "manageWalletsEditWalletNamePlaceholder": "Wallet Name",
          "manageWalletsEditWalletSave": "Save Changes",
          "manageWalletsImport": "Import",
          "manageWalletsLabel": "Manage Wallets",
          "modalActionCancel": "Cancel",
          "modalActionConfirm": "Confirm",
          "modifyDetails": "Modify Details",
          "networkConfigTooltipAddress": "ADDRESS:",
          "networkConfigTooltipPublicKey": "PUBLIC KEY:",
          "networkConfigTooltipUpdateSettings": "Update Settings",
          "networkConfigTooltipVotedNode": "VOTE CAST FOR:",
          "networkSettingsAutomatic": "AUTOMATIC",
          "networkSettingsCurrentLabel": "CURRENT NETWORK",
          "networkSettingsExplorerLabel": "BLOCK EXPLORER",
          "networkSettingsInstructions": "Manage all network settings related to how Neon interacts with the blockchain",
          "networkSettingsLabel": "Network Settings",
          "networkSettingsNodeSelectLabel": "NODE SELECTION",
          "newContact": "New Contact",
          "newsPageLabel": "News",
          "nextStep": "Next Step",
          "noAvailableAssetsToSend": "No available assets to send",
          "noClaimableGas": "Address has no claimable GAS",
          "noOptionsMessage": "No options",
          "nodeSelectBlockHeight": "Block Height",
          "nodeSelectInfo": "Top {nodeCount, number} nodes listed",
          "nodeSelectPanelHeader": "Node Selection",
          "nodeSelectSelectAutomatically": "Select automatically",
          "nodeSelectionInstructions": "If youâ€™re experiencing performance issues, try selecting a custom node below",
          "nothingToSeeHere": "Nothing to see here!",
          "notifications.failure.blockchainInfoFailure": "Failed to retrieve blockchain information.",
          "notifications.success.accountSaved": "Account saved!",
          "notifications.success.receivedBlockchainInfo": "Received latest blockchain information.",
          "notifications.success.updatedWalletName": "Succesfully updated wallet name.",
          "numberofTransactionsPending": "{transferCount, number} {transferCount, plural, one {Transfer} other {Transfers}} pending",
          "previousStep": "Previous Step",
          "print": "Print",
          "priorityTransfer": "Priority Transfer",
          "privateKey": "Private Key",
          "privateKeyLabel": "PRIVATE KEY",
          "publicAddress": "Public Address",
          "receiveAssetsAddressLabel": "Your Public Address",
          "receiveCopyCodeButton": "Copy Code Image",
          "receiveDisclaimer": "Only send assets that are <b>compatible with the NEO blockchain (NEO, GAS, etc.)</b>. Sending other assets will result in permanent loss.",
          "receivePageLabel": "Receive Assets",
          "receiveQRExplanation": "<p>Ever sent assets to the wrong address because of an errant character in the wallet address?</p><p>If not, lucky you - but it happens with frightening regularity.</p>  <p>Here at CoZ, we want to ensure people that pay you get your details right. You can generate a QR code for requesting assets to help them help you.</p><p>Every code you generate will include your public wallet address, an asset amount and a reference - all set by you.</p>",
          "receiveRequestTabAssets": "REQUEST ASSETS",
          "receiveYourAddressTabLabel": "YOUR ADDRESS",
          "recieveSelectMethod": "Select Deposit Method",
          "recieveWhyUseQRLabel": "Why use a QR code?",
          "recoverWallet": "Recover wallet",
          "recoverWalletLabel": "RECOVER WALLET",
          "removeContact": "Remove Contact",
          "requestAssetAmount": "AMOUNT",
          "requestAssetAmountLabel": "Amount",
          "requestAssetDepositLabel": "DEPOSIT INTO THIS WALLET",
          "requestAssetLabel": "ASSET",
          "requestAssetQRButton": "Generate QR Code",
          "requestAssetRefLabel": "REFERENCE",
          "requestAssetRefPlaceholder": "Add a note...",
          "requestAssetYourQRHeader": "Your QR Code",
          "requestAssetsAddressLabel": "ADDRESS",
          "requestAssetsAmountLabel": "AMOUNT",
          "requestAssetsAssetLabel": "ASSET",
          "requestAssetsPaymentDetails": "PAYMENT REQUEST DETAILS",
          "requestAssetsRefLabel": "REFERENCE",
          "requestAssetsYourQRLabel": "YOUR QR CODE",
          "saveContactButtonText": "Save Contact",
          "selectAssets": "Select Assets",
          "sendActivityLink": "Check the activity tab to see the status of your transaction.",
          "sendAdd": "Add Recipient",
          "sendAddressLabel": "RECIPIENT ADDRESS",
          "sendAddressPlaceholder": "Add wallet or select contact",
          "sendAmountLabel": "AMOUNT",
          "sendAsset": "asset",
          "sendAssetCapital": "Asset",
          "sendAssetLabel": "ASSET",
          "sendAssets": "assets",
          "sendAssetsCapital": "Assets",
          "sendBroadcasting": "Broadcasting transaction to network...",
          "sendCompleteNotification": "Transaction pending! Your balance will automatically update when the blockchain has processed it.",
          "sendCompletion": "Complete! {transferCount, number} {transferCount, plural, one {sendAsset} other {sendAssets}} to {transferCount, plural, one {sendRecipient} other {sendRecipients}}",
          "sendDisclaimer": "Please review and ensure that you have entered the correct details to avoid loss of funds.",
          "sendEnterQRCode": "Enter QR Code",
          "sendErrorLabel": "Error!",
          "sendImport": "Import",
          "sendMaxAmount": "MAX",
          "sendMoreAssets": "Send More Assets",
          "sendPageLabel": "Send Assets",
          "sendQRExplanation": "So you've been given a QR code? Click capture and hold it up to your camera.",
          "sendRecipient": "recipient",
          "sendRecipientCapital": "Recipient",
          "sendRecipients": "recipients",
          "sendRecipientsCapital": "Recipients",
          "sendSelectAssets": "{transferCount, number} of {maxNumberOfRecipients, number} Recipients",
          "sendTranfer": "TRANSFER",
          "sendTransferMessage": "{transferCount, number} {transferCount, plural, one {sendTransfer} other {sendTransferPlural}} pending",
          "sendTransferPlural": "TRANSFERS",
          "sendWithFee": "Send {itemCount, plural, one {Asset} other {Assets}} With Fee",
          "sendWithoutFee": "Send {itemCount, plural, one {Asset} other {Assets}} Without Fee",
          "settingCurrencyLabel": "Currency",
          "settingsBackUpLink": "Export",
          "settingsBackUpLinkLabel": "Backup wallet",
          "settingsCommunity": "Community Support",
          "settingsDonationLink": "Created by CoZ. Donations:",
          "settingsEncryptLink": "Encrypt a key",
          "settingsLanguageLabel": "Language",
          "settingsManageLabel": "Manage your neon wallet",
          "settingsNetworkConfigLabel": "Network configuration",
          "settingsRecoverWalletLink": "Import",
          "settingsSoundLabel": "Sound",
          "settingsThemeLabel": "Theme",
          "sidebarActivity": "Activity",
          "sidebarContacts": "Contacts",
          "sidebarCurrentBlock": "CURRENT BLOCK",
          "sidebarLogout": "Logout",
          "sidebarNews": "News",
          "sidebarReceive": "Receive",
          "sidebarSend": "Send",
          "sidebarSettings": "Settings",
          "sidebarTokenSale": "Token Sale",
          "sidebarWallet": "Wallet",
          "splitKeyLabel": "SPLIT KEY",
          "splitKeyWalletInstructions": "The Split Key import option allows users to create a new NEO account by combining the private key of an existing account with a separate private key.",
          "splitKeyWalletNamePlaceholder": "Enter your new split key wallet name...",
          "takeMeBack": "Take me back",
          "tokenSaleDisclaimer1": "Please read and acknowledge these statements to continue",
          "tokenSaleDisclaimer2": "I understand that submitting NEO or GAS multiple times may result in a loss of funds or a delayed refund depending on the policy of the ICO company.",
          "tokenSaleDisclaimer3": "I understand that some sales may only accept NEO or GAS, and I have verified which is accepted.",
          "tokenSaleDisclaimer4": "I understand that if I send NEO or GAS to a token sale that has already ended, I will lose my NEO/GAS and will not be refunded.",
          "tokenSaleDisclaimer5": "I understand that City of Zion (CoZ) is not responsible for my usage of this feature, and I have consulted this software's licenses.",
          "tokenSalePageHeader": "Participate in Token Sale",
          "transactionFeeQuestion": "PRIORITIZE YOUR TRANSACTION WITH A FEE?",
          "transactionId": "Transaction ID:",
          "walletCreatedDisclaimer": "<b>Save these details!</b> If you lose these credentials, you lose access to your assets.",
          "walletCreatedHeader": "Wallet Created!",
          "walletCreationButton": "Create Wallet",
          "walletCreationInstruction": "Enter Details",
          "walletCreationWalletNameLabel": "WALLET NAME",
          "walletCreationWalletNamePlaceholder": "Wallet Name",
          "walletCreationWalletPasswordConfirmLabel": "CONFIRM PASSPHRASE",
          "walletCreationWalletPasswordConfirmPlaceholder": "Confirm Password",
          "walletCreationWalletPasswordLabel": "PASSPHRASE",
          "walletCreationWalletPasswordPlaceholder": "Password",
          "walletImportedHeader": "Wallet Created!",
          "walletManagerNoLocalInfo": "It looks like you have no wallet information saved locally...",
          "walletManagerRemoveWallet": "Remove Wallet",
          "walletQrCodes": "Wallet QR Codes",
        }
      }
      onError={[Function]}
      textComponent={Symbol(react.fragment)}
    >
      <MemoryRouter
        initialEntries={
          Array [
            "/",
          ]
        }
        keyLength={0}
      >
        <Router
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
        >
          <div>
            <div
              className="votedNode"
            >
              test node
               
              <Component
                className="warningIcon"
              >
                <svg
                  className="warningIcon"
                />
              </Component>
            </div>
          </div>
        </Router>
      </MemoryRouter>
    </IntlProvider>
  </IntlWrapper>
</Provider>
`;

exports[`renderNode with a vote renders warningicon with no vote 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <IntlWrapper
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <IntlProvider
      defaultFormats={Object {}}
      defaultLocale="en"
      formats={Object {}}
      locale="en"
      messages={
        Object {
          "Asset": "Assetasdasd",
          "activityAddAddress": "Add",
          "activityExport": "Export",
          "activityPageLabel": "All Activity",
          "activityViewTx": "View",
          "addAContact": "Add A Contact",
          "addContactDetails": "Add Contact Details",
          "addToContacts": "Add to contacts",
          "addToken": "Add Token",
          "addressLabel": "PUBLIC ADDRESS",
          "assetRecipients": "Asset {transferCount, plural, one {Recipient} other {Recipients}}",
          "assets": "Assets",
          "auth.cancel": "Cancel",
          "auth.import.recoveryInstructions": "Upload a JSON wallet recovery file here to add your accounts to Neon. This option is also available on the Settings page.",
          "auth.ledger.connectLedger": "Connect and unlock your <strong>Ledger device</strong>",
          "auth.ledger.fetchAddress": "Fetch additional addresses",
          "auth.ledger.navigateToNeoApp": "Navigate to the <strong>NEO app</strong> on your device",
          "auth.ledger.retry": "Retry?",
          "authCreateWallet": "Create Wallet",
          "authEncrypted": "ENCRYPTED",
          "authImportWallet": "Import Wallet",
          "authLedger": "LEDGER",
          "authLedgerAddressLabel": "PUBLIC ADDRESS",
          "authLedgerFirstStep": "Connect and unlock your Ledger device",
          "authLedgerSecondStep": "Navigate to the NEO app on your device",
          "authLogin": "Login",
          "authLoginButton": "Login",
          "authPrivate": "PRIVATE",
          "authPrivateKeyPlaceholder": "Enter your private key here",
          "authSaved": "SAVED",
          "authScanQRButton": "Scan QR",
          "authWatch": "WATCH",
          "authWatchPlaceholder": "Enter a NEO address here",
          "automaticNodeSelectionTooltip": "Allow NEON to choose a node automatically",
          "captureQR": "Capture",
          "captureQRCaps": "CAPTURE",
          "chooseAccount": "Choose an Existing Account",
          "claimFeeDisclaimerN3": "Claiming GAS requires at least 0.01120527 GAS for transaction fees",
          "claimFeeGreater": "Claimable GAS is less than transaction fees",
          "claimTimeDisclaimer": "You can claim GAS once every 5 minutes",
          "claimUnavailableInWatch": "GAS claims are unavailable in Watch mode",
          "completeExclaim": "Complete!",
          "confirmAndSend": "Confirm & Send",
          "confirmRemoveContact": "Please confirm removing contact",
          "confirmation": "Confirmation",
          "confirmationRecipient": "{transferCount, number} {transferCount, plural, one {Recipient} other {Recipients}}",
          "contactName": "Name",
          "contactWalletAddress": "Wallet Address",
          "contactsPageLabel": "Manage Contacts",
          "copyAddressTooltip": "Copy Wallet Address",
          "copyCodeImage": "Copy Code Image",
          "createANewWallet": "Create New Wallet",
          "dashboardAddressLabel": "Address:",
          "dashboardAssetsPanelLabel": "System Assets",
          "dashboardAssetsTotal": "TOTAL",
          "dashboardBalancePanelLabel": "Token Balances",
          "dashboardGasClaimButton": "Claim {amount} GAS",
          "dashboardManageWallets": "Manage Wallets",
          "dashboardMarketData1Day": "1 DAY",
          "dashboardMarketData1Month": "1 MONTH",
          "dashboardMarketData1Week": "1 WEEK",
          "dashboardMarketDataLabel": "Market Data",
          "dashboardPriceNotAvailable": "N/A",
          "dashboardRefresh": "Refresh",
          "dashboardTokenBalancesHoldings": "HOLDINGS",
          "dashboardTokenBalancesPrice": "PRICE",
          "dashboardTokenBalancesToken": "Token",
          "dashboardValueLabel": "Total Wallet Value",
          "deleteLabel": "Delete",
          "depositAssets": "Deposit assets <b> compatible  with the NEO blockchain </b> using your address:",
          "editAContact": "Edit A Contact",
          "editContactDisclaimer": "Please review and ensure that you have entered the address correctly to avoid loss of funds",
          "editRecipients": "Edit Recipients",
          "encryptButton": "Generate Encrypted Key",
          "encryptInstructions": "Choose a passphrase to encrypt an existing key",
          "encryptPanelHeader": "Encrypt a key",
          "encryptStep1Label": "1) ENTER THE PRIVATE KEY YOU WANT TO ENCRYPT",
          "encryptStep1Placeholder": "Enter key",
          "encryptStep2Label": "2) CREATE A PASSPHRASE",
          "encryptStep2Placeholder": "Enter Passphrase",
          "encryptStep3Label": "3) CONFIM YOUR PASSPHRASE",
          "encryptStep3Placeholder": "Confirm Passphrase",
          "encryptedKeyLabel": "ENCRYPTED KEY",
          "enterAContactName": "Enter Contact Name...",
          "enterAWalletAddress": "Enter Wallet Address...",
          "errors.contact.contactExists": "You already have a contact with that address.",
          "errors.contact.invalidAddress": "Address is not valid.",
          "errors.contact.nameDupe": "You already have an account saved with that name.",
          "errors.contact.nameLength": "Name is too long.",
          "errors.contact.nameNull": "Name can't be null.",
          "errors.encrypt.valid": "The private key is not valid.",
          "errors.network.general": "Oops! Something went wrong...",
          "errors.password.length": "Passphrase must contain at least {PASS_MIN_LENGTH, number} characters.",
          "errors.password.match": "Passphrases must match.",
          "errors.request.fractional": "You canot request fractional {asset}.",
          "errors.request.max": "You cannot request more than 100,000,000 {asset}.",
          "errors.request.min": "You cannot request 0 {asset}.",
          "errors.request.validDecimals": "You can only request {asset} up to {validDecimals, number} decimals.",
          "errors.send.balance": "You do not have enough balance to send {total} {asset}.",
          "errors.send.blackListed": "Address is blacklisted. This is a known phishing address.",
          "errors.send.decimal": "You can only send {asset} up to {decimalCount, number} decimals.",
          "errors.send.fraction": "You cannot send fractional amounts of NEO.",
          "errors.send.invalidAddress": "You need to specify a valid NEO address.",
          "errors.send.invalidN3Address": "You need to specify a valid NEO N3 address.",
          "errors.send.negative": "You cannot send negative amounts of {asset}.",
          "errors.send.network": "A network error has occurred",
          "errors.send.number": "Amount must be a number.",
          "errors.send.zero": "Can not send 0 {asset}.",
          "fast": "Fast",
          "faster": "Faster",
          "fastest": "Fastest",
          "fee": "Fee:",
          "generateQrCodes": "Generate QR Codes",
          "importFile": "Import File",
          "inputEncryptedPlaceholder": "Encrypted Key",
          "inputPasswordPlaceholder": "Password",
          "inputSelectPlaceholder": "Select",
          "isLoadingMessage": "Loading...",
          "manageWalletsCreate": "Create",
          "manageWalletsEdit": "Edit",
          "manageWalletsEditWallet": "Edit Wallet",
          "manageWalletsEditWalletAddressLabel": "WALLET ADDRESS",
          "manageWalletsEditWalletInstructions": "Modify Details",
          "manageWalletsEditWalletNameLabel": "WALLET NAME",
          "manageWalletsEditWalletNamePlaceholder": "Wallet Name",
          "manageWalletsEditWalletSave": "Save Changes",
          "manageWalletsImport": "Import",
          "manageWalletsLabel": "Manage Wallets",
          "modalActionCancel": "Cancel",
          "modalActionConfirm": "Confirm",
          "modifyDetails": "Modify Details",
          "networkConfigTooltipAddress": "ADDRESS:",
          "networkConfigTooltipPublicKey": "PUBLIC KEY:",
          "networkConfigTooltipUpdateSettings": "Update Settings",
          "networkConfigTooltipVotedNode": "VOTE CAST FOR:",
          "networkSettingsAutomatic": "AUTOMATIC",
          "networkSettingsCurrentLabel": "CURRENT NETWORK",
          "networkSettingsExplorerLabel": "BLOCK EXPLORER",
          "networkSettingsInstructions": "Manage all network settings related to how Neon interacts with the blockchain",
          "networkSettingsLabel": "Network Settings",
          "networkSettingsNodeSelectLabel": "NODE SELECTION",
          "newContact": "New Contact",
          "newsPageLabel": "News",
          "nextStep": "Next Step",
          "noAvailableAssetsToSend": "No available assets to send",
          "noClaimableGas": "Address has no claimable GAS",
          "noOptionsMessage": "No options",
          "nodeSelectBlockHeight": "Block Height",
          "nodeSelectInfo": "Top {nodeCount, number} nodes listed",
          "nodeSelectPanelHeader": "Node Selection",
          "nodeSelectSelectAutomatically": "Select automatically",
          "nodeSelectionInstructions": "If youâ€™re experiencing performance issues, try selecting a custom node below",
          "nothingToSeeHere": "Nothing to see here!",
          "notifications.failure.blockchainInfoFailure": "Failed to retrieve blockchain information.",
          "notifications.success.accountSaved": "Account saved!",
          "notifications.success.receivedBlockchainInfo": "Received latest blockchain information.",
          "notifications.success.updatedWalletName": "Succesfully updated wallet name.",
          "numberofTransactionsPending": "{transferCount, number} {transferCount, plural, one {Transfer} other {Transfers}} pending",
          "previousStep": "Previous Step",
          "print": "Print",
          "priorityTransfer": "Priority Transfer",
          "privateKey": "Private Key",
          "privateKeyLabel": "PRIVATE KEY",
          "publicAddress": "Public Address",
          "receiveAssetsAddressLabel": "Your Public Address",
          "receiveCopyCodeButton": "Copy Code Image",
          "receiveDisclaimer": "Only send assets that are <b>compatible with the NEO blockchain (NEO, GAS, etc.)</b>. Sending other assets will result in permanent loss.",
          "receivePageLabel": "Receive Assets",
          "receiveQRExplanation": "<p>Ever sent assets to the wrong address because of an errant character in the wallet address?</p><p>If not, lucky you - but it happens with frightening regularity.</p>  <p>Here at CoZ, we want to ensure people that pay you get your details right. You can generate a QR code for requesting assets to help them help you.</p><p>Every code you generate will include your public wallet address, an asset amount and a reference - all set by you.</p>",
          "receiveRequestTabAssets": "REQUEST ASSETS",
          "receiveYourAddressTabLabel": "YOUR ADDRESS",
          "recieveSelectMethod": "Select Deposit Method",
          "recieveWhyUseQRLabel": "Why use a QR code?",
          "recoverWallet": "Recover wallet",
          "recoverWalletLabel": "RECOVER WALLET",
          "removeContact": "Remove Contact",
          "requestAssetAmount": "AMOUNT",
          "requestAssetAmountLabel": "Amount",
          "requestAssetDepositLabel": "DEPOSIT INTO THIS WALLET",
          "requestAssetLabel": "ASSET",
          "requestAssetQRButton": "Generate QR Code",
          "requestAssetRefLabel": "REFERENCE",
          "requestAssetRefPlaceholder": "Add a note...",
          "requestAssetYourQRHeader": "Your QR Code",
          "requestAssetsAddressLabel": "ADDRESS",
          "requestAssetsAmountLabel": "AMOUNT",
          "requestAssetsAssetLabel": "ASSET",
          "requestAssetsPaymentDetails": "PAYMENT REQUEST DETAILS",
          "requestAssetsRefLabel": "REFERENCE",
          "requestAssetsYourQRLabel": "YOUR QR CODE",
          "saveContactButtonText": "Save Contact",
          "selectAssets": "Select Assets",
          "sendActivityLink": "Check the activity tab to see the status of your transaction.",
          "sendAdd": "Add Recipient",
          "sendAddressLabel": "RECIPIENT ADDRESS",
          "sendAddressPlaceholder": "Add wallet or select contact",
          "sendAmountLabel": "AMOUNT",
          "sendAsset": "asset",
          "sendAssetCapital": "Asset",
          "sendAssetLabel": "ASSET",
          "sendAssets": "assets",
          "sendAssetsCapital": "Assets",
          "sendBroadcasting": "Broadcasting transaction to network...",
          "sendCompleteNotification": "Transaction pending! Your balance will automatically update when the blockchain has processed it.",
          "sendCompletion": "Complete! {transferCount, number} {transferCount, plural, one {sendAsset} other {sendAssets}} to {transferCount, plural, one {sendRecipient} other {sendRecipients}}",
          "sendDisclaimer": "Please review and ensure that you have entered the correct details to avoid loss of funds.",
          "sendEnterQRCode": "Enter QR Code",
          "sendErrorLabel": "Error!",
          "sendImport": "Import",
          "sendMaxAmount": "MAX",
          "sendMoreAssets": "Send More Assets",
          "sendPageLabel": "Send Assets",
          "sendQRExplanation": "So you've been given a QR code? Click capture and hold it up to your camera.",
          "sendRecipient": "recipient",
          "sendRecipientCapital": "Recipient",
          "sendRecipients": "recipients",
          "sendRecipientsCapital": "Recipients",
          "sendSelectAssets": "{transferCount, number} of {maxNumberOfRecipients, number} Recipients",
          "sendTranfer": "TRANSFER",
          "sendTransferMessage": "{transferCount, number} {transferCount, plural, one {sendTransfer} other {sendTransferPlural}} pending",
          "sendTransferPlural": "TRANSFERS",
          "sendWithFee": "Send {itemCount, plural, one {Asset} other {Assets}} With Fee",
          "sendWithoutFee": "Send {itemCount, plural, one {Asset} other {Assets}} Without Fee",
          "settingCurrencyLabel": "Currency",
          "settingsBackUpLink": "Export",
          "settingsBackUpLinkLabel": "Backup wallet",
          "settingsCommunity": "Community Support",
          "settingsDonationLink": "Created by CoZ. Donations:",
          "settingsEncryptLink": "Encrypt a key",
          "settingsLanguageLabel": "Language",
          "settingsManageLabel": "Manage your neon wallet",
          "settingsNetworkConfigLabel": "Network configuration",
          "settingsRecoverWalletLink": "Import",
          "settingsSoundLabel": "Sound",
          "settingsThemeLabel": "Theme",
          "sidebarActivity": "Activity",
          "sidebarContacts": "Contacts",
          "sidebarCurrentBlock": "CURRENT BLOCK",
          "sidebarLogout": "Logout",
          "sidebarNews": "News",
          "sidebarReceive": "Receive",
          "sidebarSend": "Send",
          "sidebarSettings": "Settings",
          "sidebarTokenSale": "Token Sale",
          "sidebarWallet": "Wallet",
          "splitKeyLabel": "SPLIT KEY",
          "splitKeyWalletInstructions": "The Split Key import option allows users to create a new NEO account by combining the private key of an existing account with a separate private key.",
          "splitKeyWalletNamePlaceholder": "Enter your new split key wallet name...",
          "takeMeBack": "Take me back",
          "tokenSaleDisclaimer1": "Please read and acknowledge these statements to continue",
          "tokenSaleDisclaimer2": "I understand that submitting NEO or GAS multiple times may result in a loss of funds or a delayed refund depending on the policy of the ICO company.",
          "tokenSaleDisclaimer3": "I understand that some sales may only accept NEO or GAS, and I have verified which is accepted.",
          "tokenSaleDisclaimer4": "I understand that if I send NEO or GAS to a token sale that has already ended, I will lose my NEO/GAS and will not be refunded.",
          "tokenSaleDisclaimer5": "I understand that City of Zion (CoZ) is not responsible for my usage of this feature, and I have consulted this software's licenses.",
          "tokenSalePageHeader": "Participate in Token Sale",
          "transactionFeeQuestion": "PRIORITIZE YOUR TRANSACTION WITH A FEE?",
          "transactionId": "Transaction ID:",
          "walletCreatedDisclaimer": "<b>Save these details!</b> If you lose these credentials, you lose access to your assets.",
          "walletCreatedHeader": "Wallet Created!",
          "walletCreationButton": "Create Wallet",
          "walletCreationInstruction": "Enter Details",
          "walletCreationWalletNameLabel": "WALLET NAME",
          "walletCreationWalletNamePlaceholder": "Wallet Name",
          "walletCreationWalletPasswordConfirmLabel": "CONFIRM PASSPHRASE",
          "walletCreationWalletPasswordConfirmPlaceholder": "Confirm Password",
          "walletCreationWalletPasswordLabel": "PASSPHRASE",
          "walletCreationWalletPasswordPlaceholder": "Password",
          "walletImportedHeader": "Wallet Created!",
          "walletManagerNoLocalInfo": "It looks like you have no wallet information saved locally...",
          "walletManagerRemoveWallet": "Remove Wallet",
          "walletQrCodes": "Wallet QR Codes",
        }
      }
      onError={[Function]}
      textComponent={Symbol(react.fragment)}
    >
      <MemoryRouter
        initialEntries={
          Array [
            "/",
          ]
        }
        keyLength={0}
      >
        <Router
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
        >
          <div>
            <div
              className="votedNode"
            >
              test node
               #
              1
            </div>
          </div>
        </Router>
      </MemoryRouter>
    </IntlProvider>
  </IntlWrapper>
</Provider>
`;

exports[`renderNode with no vote renders warningicon with no vote 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <IntlWrapper
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <IntlProvider
      defaultFormats={Object {}}
      defaultLocale="en"
      formats={Object {}}
      locale="en"
      messages={
        Object {
          "Asset": "Assetasdasd",
          "activityAddAddress": "Add",
          "activityExport": "Export",
          "activityPageLabel": "All Activity",
          "activityViewTx": "View",
          "addAContact": "Add A Contact",
          "addContactDetails": "Add Contact Details",
          "addToContacts": "Add to contacts",
          "addToken": "Add Token",
          "addressLabel": "PUBLIC ADDRESS",
          "assetRecipients": "Asset {transferCount, plural, one {Recipient} other {Recipients}}",
          "assets": "Assets",
          "auth.cancel": "Cancel",
          "auth.import.recoveryInstructions": "Upload a JSON wallet recovery file here to add your accounts to Neon. This option is also available on the Settings page.",
          "auth.ledger.connectLedger": "Connect and unlock your <strong>Ledger device</strong>",
          "auth.ledger.fetchAddress": "Fetch additional addresses",
          "auth.ledger.navigateToNeoApp": "Navigate to the <strong>NEO app</strong> on your device",
          "auth.ledger.retry": "Retry?",
          "authCreateWallet": "Create Wallet",
          "authEncrypted": "ENCRYPTED",
          "authImportWallet": "Import Wallet",
          "authLedger": "LEDGER",
          "authLedgerAddressLabel": "PUBLIC ADDRESS",
          "authLedgerFirstStep": "Connect and unlock your Ledger device",
          "authLedgerSecondStep": "Navigate to the NEO app on your device",
          "authLogin": "Login",
          "authLoginButton": "Login",
          "authPrivate": "PRIVATE",
          "authPrivateKeyPlaceholder": "Enter your private key here",
          "authSaved": "SAVED",
          "authScanQRButton": "Scan QR",
          "authWatch": "WATCH",
          "authWatchPlaceholder": "Enter a NEO address here",
          "automaticNodeSelectionTooltip": "Allow NEON to choose a node automatically",
          "captureQR": "Capture",
          "captureQRCaps": "CAPTURE",
          "chooseAccount": "Choose an Existing Account",
          "claimFeeDisclaimerN3": "Claiming GAS requires at least 0.01120527 GAS for transaction fees",
          "claimFeeGreater": "Claimable GAS is less than transaction fees",
          "claimTimeDisclaimer": "You can claim GAS once every 5 minutes",
          "claimUnavailableInWatch": "GAS claims are unavailable in Watch mode",
          "completeExclaim": "Complete!",
          "confirmAndSend": "Confirm & Send",
          "confirmRemoveContact": "Please confirm removing contact",
          "confirmation": "Confirmation",
          "confirmationRecipient": "{transferCount, number} {transferCount, plural, one {Recipient} other {Recipients}}",
          "contactName": "Name",
          "contactWalletAddress": "Wallet Address",
          "contactsPageLabel": "Manage Contacts",
          "copyAddressTooltip": "Copy Wallet Address",
          "copyCodeImage": "Copy Code Image",
          "createANewWallet": "Create New Wallet",
          "dashboardAddressLabel": "Address:",
          "dashboardAssetsPanelLabel": "System Assets",
          "dashboardAssetsTotal": "TOTAL",
          "dashboardBalancePanelLabel": "Token Balances",
          "dashboardGasClaimButton": "Claim {amount} GAS",
          "dashboardManageWallets": "Manage Wallets",
          "dashboardMarketData1Day": "1 DAY",
          "dashboardMarketData1Month": "1 MONTH",
          "dashboardMarketData1Week": "1 WEEK",
          "dashboardMarketDataLabel": "Market Data",
          "dashboardPriceNotAvailable": "N/A",
          "dashboardRefresh": "Refresh",
          "dashboardTokenBalancesHoldings": "HOLDINGS",
          "dashboardTokenBalancesPrice": "PRICE",
          "dashboardTokenBalancesToken": "Token",
          "dashboardValueLabel": "Total Wallet Value",
          "deleteLabel": "Delete",
          "depositAssets": "Deposit assets <b> compatible  with the NEO blockchain </b> using your address:",
          "editAContact": "Edit A Contact",
          "editContactDisclaimer": "Please review and ensure that you have entered the address correctly to avoid loss of funds",
          "editRecipients": "Edit Recipients",
          "encryptButton": "Generate Encrypted Key",
          "encryptInstructions": "Choose a passphrase to encrypt an existing key",
          "encryptPanelHeader": "Encrypt a key",
          "encryptStep1Label": "1) ENTER THE PRIVATE KEY YOU WANT TO ENCRYPT",
          "encryptStep1Placeholder": "Enter key",
          "encryptStep2Label": "2) CREATE A PASSPHRASE",
          "encryptStep2Placeholder": "Enter Passphrase",
          "encryptStep3Label": "3) CONFIM YOUR PASSPHRASE",
          "encryptStep3Placeholder": "Confirm Passphrase",
          "encryptedKeyLabel": "ENCRYPTED KEY",
          "enterAContactName": "Enter Contact Name...",
          "enterAWalletAddress": "Enter Wallet Address...",
          "errors.contact.contactExists": "You already have a contact with that address.",
          "errors.contact.invalidAddress": "Address is not valid.",
          "errors.contact.nameDupe": "You already have an account saved with that name.",
          "errors.contact.nameLength": "Name is too long.",
          "errors.contact.nameNull": "Name can't be null.",
          "errors.encrypt.valid": "The private key is not valid.",
          "errors.network.general": "Oops! Something went wrong...",
          "errors.password.length": "Passphrase must contain at least {PASS_MIN_LENGTH, number} characters.",
          "errors.password.match": "Passphrases must match.",
          "errors.request.fractional": "You canot request fractional {asset}.",
          "errors.request.max": "You cannot request more than 100,000,000 {asset}.",
          "errors.request.min": "You cannot request 0 {asset}.",
          "errors.request.validDecimals": "You can only request {asset} up to {validDecimals, number} decimals.",
          "errors.send.balance": "You do not have enough balance to send {total} {asset}.",
          "errors.send.blackListed": "Address is blacklisted. This is a known phishing address.",
          "errors.send.decimal": "You can only send {asset} up to {decimalCount, number} decimals.",
          "errors.send.fraction": "You cannot send fractional amounts of NEO.",
          "errors.send.invalidAddress": "You need to specify a valid NEO address.",
          "errors.send.invalidN3Address": "You need to specify a valid NEO N3 address.",
          "errors.send.negative": "You cannot send negative amounts of {asset}.",
          "errors.send.network": "A network error has occurred",
          "errors.send.number": "Amount must be a number.",
          "errors.send.zero": "Can not send 0 {asset}.",
          "fast": "Fast",
          "faster": "Faster",
          "fastest": "Fastest",
          "fee": "Fee:",
          "generateQrCodes": "Generate QR Codes",
          "importFile": "Import File",
          "inputEncryptedPlaceholder": "Encrypted Key",
          "inputPasswordPlaceholder": "Password",
          "inputSelectPlaceholder": "Select",
          "isLoadingMessage": "Loading...",
          "manageWalletsCreate": "Create",
          "manageWalletsEdit": "Edit",
          "manageWalletsEditWallet": "Edit Wallet",
          "manageWalletsEditWalletAddressLabel": "WALLET ADDRESS",
          "manageWalletsEditWalletInstructions": "Modify Details",
          "manageWalletsEditWalletNameLabel": "WALLET NAME",
          "manageWalletsEditWalletNamePlaceholder": "Wallet Name",
          "manageWalletsEditWalletSave": "Save Changes",
          "manageWalletsImport": "Import",
          "manageWalletsLabel": "Manage Wallets",
          "modalActionCancel": "Cancel",
          "modalActionConfirm": "Confirm",
          "modifyDetails": "Modify Details",
          "networkConfigTooltipAddress": "ADDRESS:",
          "networkConfigTooltipPublicKey": "PUBLIC KEY:",
          "networkConfigTooltipUpdateSettings": "Update Settings",
          "networkConfigTooltipVotedNode": "VOTE CAST FOR:",
          "networkSettingsAutomatic": "AUTOMATIC",
          "networkSettingsCurrentLabel": "CURRENT NETWORK",
          "networkSettingsExplorerLabel": "BLOCK EXPLORER",
          "networkSettingsInstructions": "Manage all network settings related to how Neon interacts with the blockchain",
          "networkSettingsLabel": "Network Settings",
          "networkSettingsNodeSelectLabel": "NODE SELECTION",
          "newContact": "New Contact",
          "newsPageLabel": "News",
          "nextStep": "Next Step",
          "noAvailableAssetsToSend": "No available assets to send",
          "noClaimableGas": "Address has no claimable GAS",
          "noOptionsMessage": "No options",
          "nodeSelectBlockHeight": "Block Height",
          "nodeSelectInfo": "Top {nodeCount, number} nodes listed",
          "nodeSelectPanelHeader": "Node Selection",
          "nodeSelectSelectAutomatically": "Select automatically",
          "nodeSelectionInstructions": "If youâ€™re experiencing performance issues, try selecting a custom node below",
          "nothingToSeeHere": "Nothing to see here!",
          "notifications.failure.blockchainInfoFailure": "Failed to retrieve blockchain information.",
          "notifications.success.accountSaved": "Account saved!",
          "notifications.success.receivedBlockchainInfo": "Received latest blockchain information.",
          "notifications.success.updatedWalletName": "Succesfully updated wallet name.",
          "numberofTransactionsPending": "{transferCount, number} {transferCount, plural, one {Transfer} other {Transfers}} pending",
          "previousStep": "Previous Step",
          "print": "Print",
          "priorityTransfer": "Priority Transfer",
          "privateKey": "Private Key",
          "privateKeyLabel": "PRIVATE KEY",
          "publicAddress": "Public Address",
          "receiveAssetsAddressLabel": "Your Public Address",
          "receiveCopyCodeButton": "Copy Code Image",
          "receiveDisclaimer": "Only send assets that are <b>compatible with the NEO blockchain (NEO, GAS, etc.)</b>. Sending other assets will result in permanent loss.",
          "receivePageLabel": "Receive Assets",
          "receiveQRExplanation": "<p>Ever sent assets to the wrong address because of an errant character in the wallet address?</p><p>If not, lucky you - but it happens with frightening regularity.</p>  <p>Here at CoZ, we want to ensure people that pay you get your details right. You can generate a QR code for requesting assets to help them help you.</p><p>Every code you generate will include your public wallet address, an asset amount and a reference - all set by you.</p>",
          "receiveRequestTabAssets": "REQUEST ASSETS",
          "receiveYourAddressTabLabel": "YOUR ADDRESS",
          "recieveSelectMethod": "Select Deposit Method",
          "recieveWhyUseQRLabel": "Why use a QR code?",
          "recoverWallet": "Recover wallet",
          "recoverWalletLabel": "RECOVER WALLET",
          "removeContact": "Remove Contact",
          "requestAssetAmount": "AMOUNT",
          "requestAssetAmountLabel": "Amount",
          "requestAssetDepositLabel": "DEPOSIT INTO THIS WALLET",
          "requestAssetLabel": "ASSET",
          "requestAssetQRButton": "Generate QR Code",
          "requestAssetRefLabel": "REFERENCE",
          "requestAssetRefPlaceholder": "Add a note...",
          "requestAssetYourQRHeader": "Your QR Code",
          "requestAssetsAddressLabel": "ADDRESS",
          "requestAssetsAmountLabel": "AMOUNT",
          "requestAssetsAssetLabel": "ASSET",
          "requestAssetsPaymentDetails": "PAYMENT REQUEST DETAILS",
          "requestAssetsRefLabel": "REFERENCE",
          "requestAssetsYourQRLabel": "YOUR QR CODE",
          "saveContactButtonText": "Save Contact",
          "selectAssets": "Select Assets",
          "sendActivityLink": "Check the activity tab to see the status of your transaction.",
          "sendAdd": "Add Recipient",
          "sendAddressLabel": "RECIPIENT ADDRESS",
          "sendAddressPlaceholder": "Add wallet or select contact",
          "sendAmountLabel": "AMOUNT",
          "sendAsset": "asset",
          "sendAssetCapital": "Asset",
          "sendAssetLabel": "ASSET",
          "sendAssets": "assets",
          "sendAssetsCapital": "Assets",
          "sendBroadcasting": "Broadcasting transaction to network...",
          "sendCompleteNotification": "Transaction pending! Your balance will automatically update when the blockchain has processed it.",
          "sendCompletion": "Complete! {transferCount, number} {transferCount, plural, one {sendAsset} other {sendAssets}} to {transferCount, plural, one {sendRecipient} other {sendRecipients}}",
          "sendDisclaimer": "Please review and ensure that you have entered the correct details to avoid loss of funds.",
          "sendEnterQRCode": "Enter QR Code",
          "sendErrorLabel": "Error!",
          "sendImport": "Import",
          "sendMaxAmount": "MAX",
          "sendMoreAssets": "Send More Assets",
          "sendPageLabel": "Send Assets",
          "sendQRExplanation": "So you've been given a QR code? Click capture and hold it up to your camera.",
          "sendRecipient": "recipient",
          "sendRecipientCapital": "Recipient",
          "sendRecipients": "recipients",
          "sendRecipientsCapital": "Recipients",
          "sendSelectAssets": "{transferCount, number} of {maxNumberOfRecipients, number} Recipients",
          "sendTranfer": "TRANSFER",
          "sendTransferMessage": "{transferCount, number} {transferCount, plural, one {sendTransfer} other {sendTransferPlural}} pending",
          "sendTransferPlural": "TRANSFERS",
          "sendWithFee": "Send {itemCount, plural, one {Asset} other {Assets}} With Fee",
          "sendWithoutFee": "Send {itemCount, plural, one {Asset} other {Assets}} Without Fee",
          "settingCurrencyLabel": "Currency",
          "settingsBackUpLink": "Export",
          "settingsBackUpLinkLabel": "Backup wallet",
          "settingsCommunity": "Community Support",
          "settingsDonationLink": "Created by CoZ. Donations:",
          "settingsEncryptLink": "Encrypt a key",
          "settingsLanguageLabel": "Language",
          "settingsManageLabel": "Manage your neon wallet",
          "settingsNetworkConfigLabel": "Network configuration",
          "settingsRecoverWalletLink": "Import",
          "settingsSoundLabel": "Sound",
          "settingsThemeLabel": "Theme",
          "sidebarActivity": "Activity",
          "sidebarContacts": "Contacts",
          "sidebarCurrentBlock": "CURRENT BLOCK",
          "sidebarLogout": "Logout",
          "sidebarNews": "News",
          "sidebarReceive": "Receive",
          "sidebarSend": "Send",
          "sidebarSettings": "Settings",
          "sidebarTokenSale": "Token Sale",
          "sidebarWallet": "Wallet",
          "splitKeyLabel": "SPLIT KEY",
          "splitKeyWalletInstructions": "The Split Key import option allows users to create a new NEO account by combining the private key of an existing account with a separate private key.",
          "splitKeyWalletNamePlaceholder": "Enter your new split key wallet name...",
          "takeMeBack": "Take me back",
          "tokenSaleDisclaimer1": "Please read and acknowledge these statements to continue",
          "tokenSaleDisclaimer2": "I understand that submitting NEO or GAS multiple times may result in a loss of funds or a delayed refund depending on the policy of the ICO company.",
          "tokenSaleDisclaimer3": "I understand that some sales may only accept NEO or GAS, and I have verified which is accepted.",
          "tokenSaleDisclaimer4": "I understand that if I send NEO or GAS to a token sale that has already ended, I will lose my NEO/GAS and will not be refunded.",
          "tokenSaleDisclaimer5": "I understand that City of Zion (CoZ) is not responsible for my usage of this feature, and I have consulted this software's licenses.",
          "tokenSalePageHeader": "Participate in Token Sale",
          "transactionFeeQuestion": "PRIORITIZE YOUR TRANSACTION WITH A FEE?",
          "transactionId": "Transaction ID:",
          "walletCreatedDisclaimer": "<b>Save these details!</b> If you lose these credentials, you lose access to your assets.",
          "walletCreatedHeader": "Wallet Created!",
          "walletCreationButton": "Create Wallet",
          "walletCreationInstruction": "Enter Details",
          "walletCreationWalletNameLabel": "WALLET NAME",
          "walletCreationWalletNamePlaceholder": "Wallet Name",
          "walletCreationWalletPasswordConfirmLabel": "CONFIRM PASSPHRASE",
          "walletCreationWalletPasswordConfirmPlaceholder": "Confirm Password",
          "walletCreationWalletPasswordLabel": "PASSPHRASE",
          "walletCreationWalletPasswordPlaceholder": "Password",
          "walletImportedHeader": "Wallet Created!",
          "walletManagerNoLocalInfo": "It looks like you have no wallet information saved locally...",
          "walletManagerRemoveWallet": "Remove Wallet",
          "walletQrCodes": "Wallet QR Codes",
        }
      }
      onError={[Function]}
      textComponent={Symbol(react.fragment)}
    >
      <MemoryRouter
        initialEntries={
          Array [
            "/",
          ]
        }
        keyLength={0}
      >
        <Router
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
        >
          <div>
            <div
              className="votedNode"
            >
              <Component
                className="warningIcon"
              >
                <svg
                  className="warningIcon"
                />
              </Component>
            </div>
          </div>
        </Router>
      </MemoryRouter>
    </IntlProvider>
  </IntlWrapper>
</Provider>
`;
