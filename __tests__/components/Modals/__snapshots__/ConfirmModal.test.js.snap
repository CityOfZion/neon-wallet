// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConfirmModal should render without crashing 1`] = `
<ConfirmModal
  backButtonAction={[MockFunction]}
  height="250px"
  hideModal={[MockFunction]}
  onCancel={[MockFunction]}
  onClick={[MockFunction]}
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
  text="text"
  title="test modal"
  width="500px"
>
  <EnhancedComponent
    hideModal={[Function]}
    shouldRenderHeader={false}
    style={
      Object {
        "content": Object {
          "height": "250px",
          "width": "500px",
        },
      }
    }
    title="test modal"
  >
    <BaseModal
      backButtonAction={null}
      height="450px"
      hideModal={[Function]}
      setSetting={[Function]}
      shouldCloseWithEscapeKey={true}
      shouldRenderHeader={false}
      style={
        Object {
          "content": Object {
            "height": "250px",
            "width": "500px",
          },
        }
      }
      title="test modal"
      width="450px"
    >
      <Modal
        ariaHideApp={true}
        bodyOpenClassName="ReactModal__Body--open"
        closeTimeoutMS={0}
        isOpen={true}
        onRequestClose={[Function]}
        parentSelector={[Function]}
        portalClassName="ReactModalPortal"
        shouldCloseOnEsc={true}
        shouldCloseOnOverlayClick={true}
        shouldFocusAfterRender={true}
        shouldReturnFocusAfterClose={true}
        style={
          Object {
            "content": Object {
              "background": "var(--panel-background)",
              "border": "none",
              "borderRadius": "4px",
              "boxShadow": "rgba(0, 0, 0, 0.1) 0px 0px 4px",
              "color": "var(--base-text)",
              "display": "flex",
              "flexDirection": "column",
              "height": "250px",
              "margin": "auto",
              "padding": 0,
              "width": "500px",
              "zIndex": 5000,
            },
            "overlay": Object {
              "backgroundColor": "var(--modal-overlay)",
              "margin": "auto",
              "zIndex": 200,
            },
          }
        }
      >
        <Portal
          containerInfo={
            <div
              class="ReactModalPortal"
            >
              <div
                class="ReactModal__Overlay ReactModal__Overlay--after-open"
                style="position: fixed; top: 0px; left: 0px; right: 0px; bottom: 0px; margin: auto; z-index: 200;"
              >
                <div
                  class="ReactModal__Content ReactModal__Content--after-open"
                  style="position: absolute; top: 40px; left: 40px; right: 40px; bottom: 40px; overflow: auto; border-radius: 4px; outline: none; padding: 0px; width: 500px; height: 250px; margin: auto; box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 4px; display: flex; flex-direction: column; z-index: 5000;"
                  tabindex="-1"
                >
                  <div
                    class="modalBody"
                  >
                    <div
                      class="contentContainer"
                    >
                      <div
                        class="textContainer"
                      >
                        <strong
                          class="text"
                        >
                          text
                        </strong>
                      </div>
                      <div
                        class="modalFooter"
                      >
                        <button
                          class="button primary secondaryRaised"
                          id="cancel"
                          type="button"
                        >
                          <span>
                            Cancel
                          </span>
                        </button>
                        <button
                          class="button actionButton primary"
                          id="confirm"
                          type="button"
                        >
                          <span>
                            Confirm
                          </span>
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          }
        >
          <ModalPortal
            ariaHideApp={true}
            bodyOpenClassName="ReactModal__Body--open"
            closeTimeoutMS={0}
            defaultStyles={
              Object {
                "content": Object {
                  "WebkitOverflowScrolling": "touch",
                  "background": "#fff",
                  "border": "1px solid #ccc",
                  "borderRadius": "4px",
                  "bottom": "40px",
                  "left": "40px",
                  "outline": "none",
                  "overflow": "auto",
                  "padding": "20px",
                  "position": "absolute",
                  "right": "40px",
                  "top": "40px",
                },
                "overlay": Object {
                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                },
              }
            }
            isOpen={true}
            onRequestClose={[Function]}
            parentSelector={[Function]}
            portalClassName="ReactModalPortal"
            shouldCloseOnEsc={true}
            shouldCloseOnOverlayClick={true}
            shouldFocusAfterRender={true}
            shouldReturnFocusAfterClose={true}
            style={
              Object {
                "content": Object {
                  "background": "var(--panel-background)",
                  "border": "none",
                  "borderRadius": "4px",
                  "boxShadow": "rgba(0, 0, 0, 0.1) 0px 0px 4px",
                  "color": "var(--base-text)",
                  "display": "flex",
                  "flexDirection": "column",
                  "height": "250px",
                  "margin": "auto",
                  "padding": 0,
                  "width": "500px",
                  "zIndex": 5000,
                },
                "overlay": Object {
                  "backgroundColor": "var(--modal-overlay)",
                  "margin": "auto",
                  "zIndex": 200,
                },
              }
            }
          >
            <div
              className="ReactModal__Overlay ReactModal__Overlay--after-open"
              onClick={[Function]}
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              style={
                Object {
                  "backgroundColor": "var(--modal-overlay)",
                  "bottom": 0,
                  "left": 0,
                  "margin": "auto",
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                  "zIndex": 200,
                }
              }
            >
              <div
                className="ReactModal__Content ReactModal__Content--after-open"
                onClick={[Function]}
                onKeyDown={[Function]}
                onMouseDown={[Function]}
                onMouseUp={[Function]}
                style={
                  Object {
                    "WebkitOverflowScrolling": "touch",
                    "background": "var(--panel-background)",
                    "border": "none",
                    "borderRadius": "4px",
                    "bottom": "40px",
                    "boxShadow": "rgba(0, 0, 0, 0.1) 0px 0px 4px",
                    "color": "var(--base-text)",
                    "display": "flex",
                    "flexDirection": "column",
                    "height": "250px",
                    "left": "40px",
                    "margin": "auto",
                    "outline": "none",
                    "overflow": "auto",
                    "padding": 0,
                    "position": "absolute",
                    "right": "40px",
                    "top": "40px",
                    "width": "500px",
                    "zIndex": 5000,
                  }
                }
                tabIndex="-1"
              >
                <div
                  className="modalBody"
                >
                  <div
                    className="contentContainer"
                  >
                    <div
                      className="textContainer"
                    >
                      <strong
                        className="text"
                      >
                        text
                      </strong>
                    </div>
                    <div
                      className="modalFooter"
                    >
                      <Button
                        elevated={true}
                        id="cancel"
                        onClick={[Function]}
                        primary={false}
                        shouldCenterButtonLabelText={false}
                        type="button"
                      >
                        <button
                          className="button primary secondaryRaised"
                          id="cancel"
                          onClick={[Function]}
                          type="button"
                        >
                          <span>
                            <FormattedMessage
                              id="modalActionCancel"
                              values={Object {}}
                            >
                              Cancel
                            </FormattedMessage>
                          </span>
                        </button>
                      </Button>
                      <Button
                        className="actionButton"
                        id="confirm"
                        onClick={[Function]}
                        primary={true}
                        shouldCenterButtonLabelText={false}
                        type="button"
                      >
                        <button
                          className="button actionButton primary"
                          id="confirm"
                          onClick={[Function]}
                          type="button"
                        >
                          <span>
                            <FormattedMessage
                              id="modalActionConfirm"
                              values={Object {}}
                            >
                              Confirm
                            </FormattedMessage>
                          </span>
                        </button>
                      </Button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </ModalPortal>
        </Portal>
      </Modal>
    </BaseModal>
  </EnhancedComponent>
</ConfirmModal>
`;
