{
  "import": {
    "title": "Import",
    "subtitle": "IMPORT",
    "description": "To import your wallet, enter an address, encrypted key, private key or mnemonic words:",
    "inputPlaceholder": "Please ender an address or key...",
    "buttonContinueLabel": "Next",
    "errors": {
      "allAddressesAlreadyImported": "All addresses are already imported"
    },
    "success": {
      "mnemonic": "Mnemonic complete!",
      "key": "Private key complete!",
      "encrypted": "Encrypted key complete!",
      "address": "Address complete!"
    },
    "importEncryptedDescription": "Select the desired blockchain for your new account"
  },
  "addWatch": {
    "title": "Add a watch account",
    "description": "Enter the address that you'd like to watch:",
    "inputPlaceholder": "Please ender an address",
    "information": "You won't be able to use the assets in this account!",
    "willBeAdded": "This account will be added:",
    "buttonAdd": "Add Watch Account",
    "errors": {
      "invalid": "Invalid address",
      "empty": "Please enter some text"
    }
  },
  "editWallet": {
    "title": "Edit Wallet",
    "inputPlaceholder": "Enter your wallet name...",
    "saveButtonLabel": "Save",
    "cancelButtonLabel": "Cancel",
    "nameLengthError": "Name must be at least 1 character long"
  },
  "editAccount": {
    "title": "Edit Account",
    "inputPlaceholder": "Enter your account name...",
    "colorSelectorLabel": "Select a colour for your account card",
    "saveButtonLabel": "Save",
    "cancelButtonLabel": "Cancel",
    "deleteAccountTitle": "Delete Account",
    "deleteAccountSubtext": "Tum dicere exorsus est et dolore magnam aliquam quaerat voluptatem."
  },
  "persistContactModal": {
    "addContact": "Add Contact",
    "editContact": "Edit Contact",
    "invalidName": "Invalid name",
    "emptyAddresses": "No address added",
    "noAddressesFound": "No addresses found",
    "addAddress": "Add address",
    "saveContact": "Save contact",
    "name": "NAME",
    "enterAName": "Enter a name...",
    "addresses": "ADDRESSES",
    "deleteContact": {
      "title": "Delete contact",
      "warningText": "Delete this contact?",
      "warningDescription": "All saved addresses will be unlinked from this contact",
      "buttonDeleteLabel": "Delete this contact"
    },
    "deleteAddress": {
      "title": "Delete address",
      "warningText": "Delete this address?",
      "warningDescription": "This address will be unlinked from",
      "buttonDeleteLabel": "Delete this address"
    }
  },
  "addAddress": {
    "title": "Add address",
    "editTitle": "Edit address",
    "name": "NAME",
    "blockchain": "BLOCKCHAIN",
    "addressOrDomain": "ADDRESS OR NS DOMAIN",
    "errorNoBlockchainSelected": "No blockchain selected",
    "addressComplete": "Address complete!",
    "nnsComplete": "NS domain found!",
    "invalidAddress": "Invalid address or NS domain",
    "saveAddress": "Save address"
  },
  "importMnemonicAccountsSelection": {
    "title": "Import",
    "description": "Select the addresses you’d like to import:",
    "importButtonLabel": "Import",
    "noAccountsToImport": "No accounts to import"
  },
  "importKeyAccountsSelection": {
    "title": "Import",
    "description": "Select the addresses you’d like to import:",
    "importButtonLabel": "Import",
    "noAccountsToImport": "No accounts to import"
  },
  "dappConnection": {
    "title": "Connect with a dApp",
    "description": "All transactions requested by a connected dApp will <strong>require your permission before being broadcast</strong> to the blockchain.",
    "disclaimer": "No actions that are initiated by the dApp will happen without your direct approval.",
    "inputPlaceholder": "Paste your URL here...",
    "buttonConnectLabel": "Connect",
    "errors": {
      "errorToConnect": "Oops! we’ve encountered an error. Try to generate a new uri and try again."
    }
  },
  "dappConnectionDetails": {
    "title": "This app wants to connect!",
    "description": "{{name}} wants to connect to your wallet",
    "connectionDetailsTitle": "Connection details",
    "successModal": {
      "title": "Connect a dApp",
      "subtitle": "A new dApp has been connected!",
      "buttonReturnLabel": "Return to your dashboard"
    },
    "errorModal": {
      "title": "Connect a dApp",
      "subtitle": "Oops! we’ve encountered an error",
      "subtitle2": "The dApp hasn’t been connected",
      "subtitle3": "Please try again later.",
      "buttonReturnLabel": "Return to your dashboard"
    }
  },
  "dappConnectionAccountSelection": {
    "title": "Connect to an account",
    "description": "Which account do you want to connect ?"
  },
  "dappConnectionListModal": {
    "title": "Connected dApps",
    "inputPlaceholder": "Search for dApp...",
    "listTitle": "Your connected dApps",
    "emptyList": "No dApp connections",
    "buttonLabel": "Connect new"
  },
  "selectContact": {
    "title": "Select a contact",
    "selectRecipient": "Select recipient"
  },
  "blockchaiinSelectionModal": {
    "buttonContinueLabel": "Next"
  },
  "importEncryptedPasswordModal": {
    "title": "Import",
    "description": "Enter a pass phrase for your encrypted key:",
    "inputPlaceholder": "Enter your pass phrase...",
    "buttonContinueLabel": "Import",
    "addressAlreadyExist": "Address already exists",
    "success": "Encrypted key successfully imported!"
  },
  "selectAccount": {
    "yourAccounts": "Your accounts:"
  },
  "selectToken": {
    "title": "Select token to send",
    "yourBalances": "Your token balances:",
    "selectToken": "Select token"
  },
  "inputAmount": {
    "title": "Amount you want to send",
    "enterTokenAmount": "Enter token amount:",
    "fiatValue": "Fiat value (USD estimated)",
    "balanceAfterTransaction": "Balance after transaction",
    "insufficientBalanceAvailable": "Insufficient balance available",
    "max": "Max",
    "or": "OR",
    "inputPlaceholder": "0,000.00",
    "enterUsdAmount": "Enter a USD amount:",
    "roundDown": "Round down",
    "selectAmountSend": "Select amount to send",
    "tokenValue": "Token value"
  },
  "networkSelection": {
    "title": "Network",
    "selectNetwork": "Select a network"
  },
  "dappPermission": {
    "unsupportedMethodError": "The method {{method}} is not supported",
    "cancelled": "Request cancelled",
    "errorModal": {
      "heading": "Dapp Request",
      "subtitle": "Request failed",
      "text": "I'm sorry but your request could not be processed.",
      "errorMessageLabel": "ERROR MESSAGE"
    },
    "requests": {
      "neo3": {
        "contractInvocation": {
          "subtitle": "Confirm that you’d like to proceed",
          "overrideFeeInfo": "The dApp has overwritten the fees",
          "feeError": "Error to calculate fee. The request was cancelled.",
          "feeLabel": "Fee",
          "hashLabel": "HASH",
          "signatureScopeTitle": "Signature scope",
          "acceptButtonLabel": "Confirm",
          "cancelButtonLabel": "Cancel"
        },
        "invokeFunction": {
          "title": "This app needs your permission to perform this transaction",
          "successModal": {
            "heading": "Dapp Request",
            "subtitle": "Transaction successfully sent!",
            "text": "Once your transaction has been confirmed it will appear in your activity feed."
          }
        },
        "signTransaction": {
          "title": "This app needs your permission to sign this transaction",
          "successModal": {
            "heading": "Dapp Request",
            "subtitle": "Transaction successfully signed!"
          }
        },
        "signMessage": {
          "title": "This app asks for authentication",
          "messageLabel": "MESSAGE",
          "acceptButtonLabel": "Authenticate",
          "cancelButtonLabel": "Reject",
          "successModal": {
            "heading": "Dapp Request",
            "subtitle": "Message successfully signed!"
          }
        },
        "verifyMessage": {
          "title": "This app asks for authentication",
          "messageLabel": "SIGNED MESSAGE",
          "acceptButtonLabel": "Authenticate",
          "cancelButtonLabel": "Reject",
          "successModal": {
            "heading": "Dapp Request",
            "subtitle": "Wallet authenticated!"
          }
        },
        "encrypt": {
          "title": "This app asks for encryption",
          "messageLabel": "MESSAGE",
          "acceptButtonLabel": "Encrypt",
          "cancelButtonLabel": "Reject",
          "successModal": {
            "heading": "Dapp Request",
            "subtitle": "Message successfully encrypted!"
          }
        },
        "decrypt": {
          "title": "This app asks for decryption",
          "messageLabel": "MESSAGE",
          "acceptButtonLabel": "Decrypt",
          "cancelButtonLabel": "Reject",
          "successModal": {
            "heading": "Dapp Request",
            "subtitle": "Message successfully decrypted!"
          }
        }
      },
      "ethereum": {
        "signMessage": {
          "title": "This app asks for authentication",
          "messageLabel": "MESSAGE",
          "acceptButtonLabel": "Authenticate",
          "cancelButtonLabel": "Reject",
          "successModal": {
            "heading": "Dapp Request",
            "subtitle": "Message successfully signed!"
          }
        },
        "rawJson": {
          "dataLabel": "DATA",
          "acceptButtonLabel": "Accept",
          "cancelButtonLabel": "Reject"
        },
        "signTransaction": {
          "title": "This app needs your permission to sign this transaction",
          "successModal": {
            "heading": "Dapp Request",
            "subtitle": "Transaction successfully signed!"
          }
        },
        "sendTransaction": {
          "title": "This app needs your permission to perform this transaction",
          "successModal": {
            "heading": "Dapp Request",
            "subtitle": "Transaction successfully sent!",
            "text": "Once your transaction has been confirmed it will appear in your activity feed."
          }
        },
        "signTypedData": {
          "title": "This app asks for authentication",
          "successModal": {
            "heading": "Dapp Request",
            "subtitle": "Message successfully signed!"
          }
        }
      }
    }
  },
  "dappPermissionSignatureScopeModal": {
    "scopes": {
      "None": "Your signature is only valid for fee payments.",
      "CalledByEntry": "Your signature can only be used by the calling contract and just for this transaction.",
      "Global": "Your signature can be used without restriction with any contract.",
      "CustomContracts": "Your signature can be used by the set of contracts listed above.",
      "CustomGroups": "Your signature can be used by the set of groups listed above.",
      "WitnessRules": "Your signature is only valid for transactions that match the specified rules and conditions, such as the current script hash, group, or calling script hash. This allows for more complex and expressive signature scoping to address edge cases and potential reentrancy attacks."
    }
  },
  "dappPermissionContractDetails": {
    "title": "Invocation details",
    "detailsLabel": "DETAILS",
    "hashLabel": "HASH",
    "parametersLabel": "REQUEST PARAMETERS",
    "methodNotFoundError": "Method not found in contract"
  }
}